<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='mindwave_data_dump' inline='true' name='textscan.41935.920433784719' version='8.3'>
      <connection class='textscan' directory='C:/Users/Hassan/Dropbox/Berkeley/iSchool/CURRENT Courses/INFO 290_8 - Sensors Humans Data Apps/Projects/Mind-Heart-Reader/analysis' filename='mindwave_data_dump.csv'>
        <relation name='mindwave_data_dump#csv' table='[mindwave_data_dump#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='image_order' ordinal='0' />
            <column datatype='integer' name='signal_quality' ordinal='1' />
            <column datatype='string' name='evant_tagger' ordinal='2' />
            <column datatype='real' name='meditation' ordinal='3' />
            <column datatype='integer' name='id' ordinal='4' />
            <column datatype='integer' name='index' ordinal='5' />
            <column datatype='integer' name='image_order_index' ordinal='6' />
            <column datatype='real' name='familiarity' ordinal='7' />
            <column datatype='real' name='theta' ordinal='8' />
            <column datatype='datetime' name='timestamp' ordinal='9' />
            <column datatype='string' name='experiment_user' ordinal='10' />
            <column datatype='real' name='attention' ordinal='11' />
            <column datatype='real' name='appreciation' ordinal='12' />
            <column datatype='real' name='beta' ordinal='13' />
            <column datatype='real' name='mental_effort' ordinal='14' />
            <column datatype='real' name='delta' ordinal='15' />
            <column datatype='real' name='alpha' ordinal='16' />
            <column datatype='string' name='response' ordinal='17' />
            <column datatype='string' name='experiment_title' ordinal='18' />
            <column datatype='string' name='new_image' ordinal='19' />
            <column datatype='integer' name='experiment_id' ordinal='20' />
            <column datatype='real' name='gamma' ordinal='21' />
          </columns>
        </relation>
        <refresh incremental-updates=''>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>image_order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[image_order]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>image_order</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>signal_quality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[signal_quality]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>signal_quality</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>evant_tagger</remote-name>
            <remote-type>129</remote-type>
            <local-name>[evant_tagger]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>evant_tagger</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>meditation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[meditation]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>meditation</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>image_order_index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[image_order_index]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>image_order_index</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>familiarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[familiarity]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>familiarity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>theta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[theta]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>theta</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <ordinal>9</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>experiment_user</remote-name>
            <remote-type>129</remote-type>
            <local-name>[experiment_user]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>experiment_user</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attention</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attention]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>attention</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appreciation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[appreciation]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>appreciation</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[beta]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>beta</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mental_effort</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mental_effort]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>mental_effort</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[delta]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>delta</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alpha</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alpha]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>alpha</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>response</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>experiment_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[experiment_title]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>experiment_title</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_image</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_image]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>new_image</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>experiment_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[experiment_id]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>experiment_id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gamma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gamma]</local-name>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias>gamma</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[mindwave_data_dump#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='new_image count' datatype='integer' name='[Calculation_1231023224744019]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [new_image] = &apos;True&apos; Then 1 Else Null End' scope-isolation='false' />
      </column>
      <column caption='beta / alpha' datatype='real' name='[Calculation_1931023220606266]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[beta] / [alpha]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Alpha' datatype='real' name='[alpha]' role='measure' type='quantitative'>
      </column>
      <column caption='Appreciation' datatype='real' name='[appreciation]' role='measure' type='quantitative'>
      </column>
      <column caption='Attention' datatype='real' name='[attention]' role='measure' type='quantitative'>
      </column>
      <column caption='Beta' datatype='real' name='[beta]' role='measure' type='quantitative'>
      </column>
      <column caption='Delta' datatype='real' name='[delta]' role='measure' type='quantitative'>
      </column>
      <column caption='Evant Tagger' datatype='string' name='[evant_tagger]' role='dimension' type='nominal'>
      </column>
      <column caption='Experiment Id' datatype='integer' name='[experiment_id]' role='dimension' type='ordinal'>
      </column>
      <column caption='Experiment Title' datatype='string' name='[experiment_title]' role='dimension' type='nominal'>
      </column>
      <column caption='Experiment User' datatype='string' name='[experiment_user]' role='dimension' type='nominal'>
      </column>
      <column caption='Familiarity' datatype='real' name='[familiarity]' role='measure' type='quantitative'>
      </column>
      <column caption='Gamma' datatype='real' name='[gamma]' role='measure' type='quantitative'>
      </column>
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[image_order]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[image_order_index]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[index]' role='dimension' type='ordinal'>
      </column>
      <column caption='Meditation' datatype='real' name='[meditation]' role='measure' type='quantitative'>
      </column>
      <column caption='Mental Effort' datatype='real' name='[mental_effort]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='string' name='[new_image]' role='dimension' type='nominal'>
      </column>
      <column caption='Response' datatype='string' name='[response]' role='dimension' type='nominal'>
      </column>
      <column caption='Signal Quality' datatype='integer' name='[signal_quality]' role='measure' type='quantitative'>
      </column>
      <column caption='Theta' datatype='real' name='[theta]' role='measure' type='quantitative'>
      </column>
      <column caption='Timestamp' datatype='datetime' name='[timestamp]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[response]' derivation='None' name='[none:response:nk]' pivot='key' type='nominal' />
      <folder name='raw signals' role='measures'>
        <folder-item name='[Calculation_1931023220606266]' type='field' />
        <folder-item name='[alpha]' type='field' />
        <folder-item name='[beta]' type='field' />
        <folder-item name='[delta]' type='field' />
        <folder-item name='[gamma]' type='field' />
        <folder-item name='[theta]' type='field' />
      </folder>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Hassan\Dropbox\Berkeley\iSchool\CURRENT Courses\INFO 290_8 - Sensors Humans Data Apps\Projects\Mind-Heart-Reader\analysis\mindwave_data_dump.tde' schema='Extract' tablename='Extract' update-time='10/24/2014 05:57:02 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1231023224744019]' formula='if [new_image] = &apos;True&apos; Then 1 Else Null End' />
            <calculation column='[Calculation_1931023220606266]' formula='[beta] / [alpha]' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6970' timestamp-start='2014-10-24 05:57:02.585' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_1231023224744019</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_1231023224744019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1231023224744019</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1931023220606266</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1931023220606266]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1931023220606266</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5000</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.056364277891291475</statistic>
                <statistic aggregation='Max' datatype='real'>3.9371925109407426</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>alpha</remote-name>
              <remote-type>5</remote-type>
              <local-name>[alpha]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>alpha</remote-alias>
              <ordinal>3</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4999</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>9.9000000000000008e-05</statistic>
                <statistic aggregation='Max' datatype='real'>5518.6635829999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>appreciation</remote-name>
              <remote-type>4</remote-type>
              <local-name>[appreciation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>appreciation</remote-alias>
              <ordinal>4</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>4.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attention</remote-name>
              <remote-type>4</remote-type>
              <local-name>[attention]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attention</remote-alias>
              <ordinal>5</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>61</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>beta</remote-name>
              <remote-type>5</remote-type>
              <local-name>[beta]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>beta</remote-alias>
              <ordinal>6</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4996</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.2000000000000005e-05</statistic>
                <statistic aggregation='Max' datatype='real'>3375.9586319999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>delta</remote-name>
              <remote-type>5</remote-type>
              <local-name>[delta]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>delta</remote-alias>
              <ordinal>7</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4999</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.00012</statistic>
                <statistic aggregation='Max' datatype='real'>4503.8827609999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>evant_tagger</remote-name>
              <remote-type>129</remote-type>
              <local-name>[evant_tagger]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>evant_tagger</remote-alias>
              <ordinal>8</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>experiment_id</remote-name>
              <remote-type>16</remote-type>
              <local-name>[experiment_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>experiment_id</remote-alias>
              <ordinal>9</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>5</statistic>
                <statistic aggregation='Max' datatype='integer'>18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>experiment_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[experiment_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>experiment_title</remote-alias>
              <ordinal>10</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Erica IMages&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;test female exp&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>experiment_user</remote-name>
              <remote-type>129</remote-type>
              <local-name>[experiment_user]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>experiment_user</remote-alias>
              <ordinal>11</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Ankita&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Robyn&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>familiarity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[familiarity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>familiarity</remote-alias>
              <ordinal>12</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5000</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-40338.467153999998</statistic>
                <statistic aggregation='Max' datatype='real'>1716.368606</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gamma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gamma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gamma</remote-alias>
              <ordinal>13</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4979</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.9999999999999998e-06</statistic>
                <statistic aggregation='Max' datatype='real'>490.96036800000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>2</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>14</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6970</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>13739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>image_order</remote-name>
              <remote-type>16</remote-type>
              <local-name>[image_order]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>image_order</remote-alias>
              <ordinal>15</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>25</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>image_order_index</remote-name>
              <remote-type>2</remote-type>
              <local-name>[image_order_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>image_order_index</remote-alias>
              <ordinal>16</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>136</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>135</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>index</remote-name>
              <remote-type>2</remote-type>
              <local-name>[index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>index</remote-alias>
              <ordinal>17</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1541</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>-543</statistic>
                <statistic aggregation='Max' datatype='integer'>997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>meditation</remote-name>
              <remote-type>4</remote-type>
              <local-name>[meditation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>meditation</remote-alias>
              <ordinal>18</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>61</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mental_effort</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mental_effort]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mental_effort</remote-alias>
              <ordinal>19</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4999</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-28.651135</statistic>
                <statistic aggregation='Max' datatype='real'>25.319862000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_image</remote-name>
              <remote-type>129</remote-type>
              <local-name>[new_image]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_image</remote-alias>
              <ordinal>20</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;True&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>response</remote-name>
              <remote-type>129</remote-type>
              <local-name>[response]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>response</remote-alias>
              <ordinal>21</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;dislike&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>signal_quality</remote-name>
              <remote-type>16</remote-type>
              <local-name>[signal_quality]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>signal_quality</remote-alias>
              <ordinal>22</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>-1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>theta</remote-name>
              <remote-type>5</remote-type>
              <local-name>[theta]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>theta</remote-alias>
              <ordinal>23</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5000</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.00015899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>9596.2006070000007</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>135</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>24</ordinal>
              <family>mindwave_data_dump#csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5000</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2014-10-19 01:05:33#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2014-10-22 15:35:40#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:response:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dislike&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='mindwave_data_dump' name='textscan.41935.920433784719' />
          </datasources>
          <datasource-dependencies datasource='textscan.41935.920433784719'>
            <column caption='beta / alpha' datatype='real' name='[Calculation_1931023220606266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[beta] / [alpha]' scope-isolation='false' />
            </column>
            <column caption='Experiment Id' datatype='integer' name='[experiment_id]' role='dimension' type='ordinal'>
            </column>
            <column caption='Experiment Title' datatype='string' name='[experiment_title]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[timestamp]' derivation='Hour' name='[hr:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Minute' name='[mi:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[experiment_id]' derivation='None' name='[none:experiment_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[experiment_title]' derivation='None' name='[none:experiment_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[response]' derivation='None' name='[none:response:nk]' pivot='key' type='nominal' />
            <column caption='Response' datatype='string' name='[response]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[timestamp]' derivation='Second' name='[sc:timestamp:ok]' pivot='key' type='ordinal' />
            <column caption='Signal Quality' datatype='integer' name='[signal_quality]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1931023220606266]' derivation='Sum' name='[sum:Calculation_1931023220606266:qk]' pivot='key' type='quantitative' />
            <column-instance column='[signal_quality]' derivation='Sum' name='[sum:signal_quality:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp' datatype='datetime' name='[timestamp]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41935.920433784719].[none:response:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:response:nk]' />
              <groupfilter function='member' level='[none:response:nk]' member='&quot;None&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41935.920433784719].[sum:Calculation_1931023220606266:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.41935.920433784719].[sum:signal_quality:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([textscan.41935.920433784719].[none:experiment_id:ok] / [textscan.41935.920433784719].[none:experiment_title:nk]) * ([textscan.41935.920433784719].[sum:Calculation_1931023220606266:qk] + [textscan.41935.920433784719].[sum:signal_quality:qk]))</rows>
        <cols>([textscan.41935.920433784719].[hr:timestamp:ok] / ([textscan.41935.920433784719].[mi:timestamp:ok] / [textscan.41935.920433784719].[sc:timestamp:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='mindwave_data_dump' name='textscan.41935.920433784719' />
          </datasources>
          <datasource-dependencies datasource='textscan.41935.920433784719'>
            <column caption='beta / alpha' datatype='real' name='[Calculation_1931023220606266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[beta] / [alpha]' scope-isolation='false' />
            </column>
            <column caption='Alpha' datatype='real' name='[alpha]' role='measure' type='quantitative'>
            </column>
            <column caption='Appreciation' datatype='real' name='[appreciation]' role='measure' type='quantitative'>
            </column>
            <column caption='Attention' datatype='real' name='[attention]' role='measure' type='quantitative'>
            </column>
            <column caption='Beta' datatype='real' name='[beta]' role='measure' type='quantitative'>
            </column>
            <column caption='Delta' datatype='real' name='[delta]' role='measure' type='quantitative'>
            </column>
            <column caption='Experiment Id' datatype='integer' name='[experiment_id]' role='dimension' type='ordinal'>
            </column>
            <column caption='Experiment Title' datatype='string' name='[experiment_title]' role='dimension' type='nominal'>
            </column>
            <column caption='Experiment User' datatype='string' name='[experiment_user]' role='dimension' type='nominal'>
            </column>
            <column caption='Familiarity' datatype='real' name='[familiarity]' role='measure' type='quantitative'>
            </column>
            <column caption='Gamma' datatype='real' name='[gamma]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[image_order]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[image_order_index]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[index]' role='dimension' type='ordinal'>
            </column>
            <column caption='Meditation' datatype='real' name='[meditation]' role='measure' type='quantitative'>
            </column>
            <column caption='Mental Effort' datatype='real' name='[mental_effort]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[experiment_id]' derivation='None' name='[none:experiment_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[experiment_title]' derivation='None' name='[none:experiment_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[experiment_user]' derivation='None' name='[none:experiment_user:nk]' pivot='key' type='nominal' />
            <column-instance column='[image_order]' derivation='None' name='[none:image_order:ok]' pivot='key' type='ordinal' />
            <column-instance column='[image_order_index]' derivation='None' name='[none:image_order_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[index]' derivation='None' name='[none:index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response]' derivation='None' name='[none:response:nk]' pivot='key' type='nominal' />
            <column caption='Response' datatype='string' name='[response]' role='dimension' type='nominal'>
            </column>
            <column caption='Signal Quality' datatype='integer' name='[signal_quality]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1931023220606266]' derivation='Sum' name='[sum:Calculation_1931023220606266:qk]' pivot='key' type='quantitative' />
            <column-instance column='[alpha]' derivation='Sum' name='[sum:alpha:qk]' pivot='key' type='quantitative' />
            <column-instance column='[appreciation]' derivation='Sum' name='[sum:appreciation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attention]' derivation='Sum' name='[sum:attention:qk]' pivot='key' type='quantitative' />
            <column-instance column='[beta]' derivation='Sum' name='[sum:beta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[delta]' derivation='Sum' name='[sum:delta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[familiarity]' derivation='Sum' name='[sum:familiarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gamma]' derivation='Sum' name='[sum:gamma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[meditation]' derivation='Sum' name='[sum:meditation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mental_effort]' derivation='Sum' name='[sum:mental_effort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[signal_quality]' derivation='Sum' name='[sum:signal_quality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[theta]' derivation='Sum' name='[sum:theta:qk]' pivot='key' type='quantitative' />
            <column caption='Theta' datatype='real' name='[theta]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41935.920433784719].[none:experiment_id:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:experiment_id:ok]' member='15' />
              <groupfilter function='member' level='[none:experiment_id:ok]' member='16' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.41935.920433784719].[none:image_order:ok]'>
            <groupfilter from='1' function='range' level='[none:image_order:ok]' to='25' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.41935.920433784719].[none:index:ok]'>
            <groupfilter expression='SUM([index]) &gt; -10' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.41935.920433784719].[none:index:ok]</column>
            <column>[textscan.41935.920433784719].[none:image_order:ok]</column>
            <column>[textscan.41935.920433784719].[none:experiment_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.41935.920433784719].[sum:Calculation_1931023220606266:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.41935.920433784719].[sum:signal_quality:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.41935.920433784719].[sum:appreciation:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[textscan.41935.920433784719].[sum:attention:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[textscan.41935.920433784719].[sum:familiarity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[textscan.41935.920433784719].[sum:meditation:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' y-axis-name='[textscan.41935.920433784719].[sum:mental_effort:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' y-axis-name='[textscan.41935.920433784719].[sum:Calculation_1931023220606266:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' y-axis-name='[textscan.41935.920433784719].[sum:alpha:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' y-axis-name='[textscan.41935.920433784719].[sum:beta:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' y-axis-name='[textscan.41935.920433784719].[sum:delta:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='13' y-axis-name='[textscan.41935.920433784719].[sum:gamma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='14' y-axis-name='[textscan.41935.920433784719].[sum:theta:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([textscan.41935.920433784719].[none:experiment_user:nk] / [textscan.41935.920433784719].[none:experiment_title:nk]) * ([textscan.41935.920433784719].[sum:alpha:qk] + ([textscan.41935.920433784719].[sum:beta:qk] + ([textscan.41935.920433784719].[sum:delta:qk] + ([textscan.41935.920433784719].[sum:gamma:qk] + ([textscan.41935.920433784719].[sum:theta:qk] + ([textscan.41935.920433784719].[sum:Calculation_1931023220606266:qk] + ([textscan.41935.920433784719].[sum:signal_quality:qk] + ([textscan.41935.920433784719].[sum:appreciation:qk] + ([textscan.41935.920433784719].[sum:attention:qk] + ([textscan.41935.920433784719].[sum:familiarity:qk] + ([textscan.41935.920433784719].[sum:meditation:qk] + ([textscan.41935.920433784719].[sum:mental_effort:qk] + [textscan.41935.920433784719].[sum:Calculation_1931023220606266:qk])))))))))))))</rows>
        <cols>([textscan.41935.920433784719].[none:image_order:ok] / [textscan.41935.920433784719].[none:image_order_index:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='mindwave_data_dump' name='textscan.41935.920433784719' />
          </datasources>
          <datasource-dependencies datasource='textscan.41935.920433784719'>
            <column caption='new_image count' datatype='integer' name='[Calculation_1231023224744019]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [new_image] = &apos;True&apos; Then 1 Else Null End' scope-isolation='false' />
            </column>
            <column caption='beta / alpha' datatype='real' name='[Calculation_1931023220606266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[beta] / [alpha]' scope-isolation='false' />
            </column>
            <column caption='Alpha' datatype='real' name='[alpha]' role='measure' type='quantitative'>
            </column>
            <column caption='Appreciation' datatype='real' name='[appreciation]' role='measure' type='quantitative'>
            </column>
            <column caption='Attention' datatype='real' name='[attention]' role='measure' type='quantitative'>
            </column>
            <column caption='Beta' datatype='real' name='[beta]' role='measure' type='quantitative'>
            </column>
            <column caption='Delta' datatype='real' name='[delta]' role='measure' type='quantitative'>
            </column>
            <column caption='Experiment Id' datatype='integer' name='[experiment_id]' role='dimension' type='ordinal'>
            </column>
            <column caption='Experiment Title' datatype='string' name='[experiment_title]' role='dimension' type='nominal'>
            </column>
            <column caption='Experiment User' datatype='string' name='[experiment_user]' role='dimension' type='nominal'>
            </column>
            <column caption='Familiarity' datatype='real' name='[familiarity]' role='measure' type='quantitative'>
            </column>
            <column caption='Gamma' datatype='real' name='[gamma]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[image_order]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[image_order_index]' role='dimension' type='ordinal'>
            </column>
            <column caption='Meditation' datatype='real' name='[meditation]' role='measure' type='quantitative'>
            </column>
            <column caption='Mental Effort' datatype='real' name='[mental_effort]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[experiment_id]' derivation='None' name='[none:experiment_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[experiment_title]' derivation='None' name='[none:experiment_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[experiment_user]' derivation='None' name='[none:experiment_user:nk]' pivot='key' type='nominal' />
            <column-instance column='[image_order]' derivation='None' name='[none:image_order:ok]' pivot='key' type='ordinal' />
            <column-instance column='[image_order_index]' derivation='None' name='[none:image_order_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response]' derivation='None' name='[none:response:nk]' pivot='key' type='nominal' />
            <column caption='Response' datatype='string' name='[response]' role='dimension' type='nominal'>
            </column>
            <column caption='Signal Quality' datatype='integer' name='[signal_quality]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1231023224744019]' derivation='Sum' name='[sum:Calculation_1231023224744019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1931023220606266]' derivation='Sum' name='[sum:Calculation_1931023220606266:qk]' pivot='key' type='quantitative' />
            <column-instance column='[alpha]' derivation='Sum' name='[sum:alpha:qk]' pivot='key' type='quantitative' />
            <column-instance column='[appreciation]' derivation='Sum' name='[sum:appreciation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attention]' derivation='Sum' name='[sum:attention:qk]' pivot='key' type='quantitative' />
            <column-instance column='[beta]' derivation='Sum' name='[sum:beta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[delta]' derivation='Sum' name='[sum:delta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[familiarity]' derivation='Sum' name='[sum:familiarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gamma]' derivation='Sum' name='[sum:gamma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[meditation]' derivation='Sum' name='[sum:meditation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mental_effort]' derivation='Sum' name='[sum:mental_effort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[signal_quality]' derivation='Sum' name='[sum:signal_quality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[theta]' derivation='Sum' name='[sum:theta:qk]' pivot='key' type='quantitative' />
            <column caption='Theta' datatype='real' name='[theta]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41935.920433784719].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:alpha:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:beta:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:delta:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:gamma:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:theta:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:Calculation_1931023220606266:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:appreciation:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:attention:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:familiarity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:meditation:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:mental_effort:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41935.920433784719].[sum:signal_quality:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41935.920433784719].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41935.920433784719].[sum:alpha:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:beta:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:delta:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:gamma:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:theta:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:Calculation_1931023220606266:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:appreciation:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:attention:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:familiarity:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:meditation:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:mental_effort:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:signal_quality:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41935.920433784719].[sum:Calculation_1231023224744019:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.41935.920433784719].[none:experiment_id:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:experiment_id:ok]' member='15' />
              <groupfilter function='member' level='[none:experiment_id:ok]' member='16' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.41935.920433784719].[none:image_order:ok]'>
            <groupfilter from='1' function='range' level='[none:image_order:ok]' to='20' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.41935.920433784719].[:Measure Names]</column>
            <column>[textscan.41935.920433784719].[none:experiment_id:ok]</column>
            <column>[textscan.41935.920433784719].[none:image_order:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41935.920433784719].[none:response:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([textscan.41935.920433784719].[:Measure Names] / ([textscan.41935.920433784719].[none:experiment_user:nk] / [textscan.41935.920433784719].[none:experiment_title:nk])) * [textscan.41935.920433784719].[Multiple Values])</rows>
        <cols>([textscan.41935.920433784719].[none:image_order:ok] / [textscan.41935.920433784719].[none:image_order_index:ok])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41935.920433784719].[none:response:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.41935.920433784719].[none:experiment_id:ok]</field>
          <field>[textscan.41935.920433784719].[none:experiment_title:nk]</field>
          <field>[textscan.41935.920433784719].[sc:timestamp:qk]</field>
          <field>[textscan.41935.920433784719].[yr:timestamp:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.41935.920433784719].[none:response:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.41935.920433784719].[none:experiment_id:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.41935.920433784719].[none:experiment_id:ok]</field>
          <field>[textscan.41935.920433784719].[none:experiment_title:nk]</field>
          <field>[textscan.41935.920433784719].[none:experiment_user:nk]</field>
          <field>[textscan.41935.920433784719].[none:image_order:ok]</field>
          <field>[textscan.41935.920433784719].[none:image_order_index:ok]</field>
          <field>[textscan.41935.920433784719].[none:index:ok]</field>
          <field>[textscan.41935.920433784719].[none:new_image:nk]</field>
          <field>[textscan.41935.920433784719].[none:response:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.41935.920433784719].[none:response:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.41935.920433784719].[none:experiment_id:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.41935.920433784719].[:Measure Names]</field>
          <field>[textscan.41935.920433784719].[none:experiment_title:nk]</field>
          <field>[textscan.41935.920433784719].[none:experiment_user:nk]</field>
          <field>[textscan.41935.920433784719].[none:image_order:ok]</field>
          <field>[textscan.41935.920433784719].[none:image_order_index:ok]</field>
          <field>[textscan.41935.920433784719].[none:index:ok]</field>
          <field>[textscan.41935.920433784719].[none:response:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9WYxkV3rn97t77LnvWZVZ+8JikSwu1d0ke282ezRqjYTRSBoYBgzYGsCG
      Ab/Og1/8NAYMwy8GNLYgqz2StbfULTVbZHNvrrXvlZVVmVmV+xYZGevdz/HDzYjcKyObLLKi
      lX+gUDcjvjhx7hfnu+ec//kWRUop2cMe/oVC/bI7sIc9fJnYM4A9NCx+5cWLlLXP6p9jf/aw
      hy8Ut2/fpqMlQ8ULiaeb8QpZWrp6WZiepKWjk+VCmf39PShIsnMzqPEU+aU8luJxb2aZge7W
      PQPYQ+OiWMyTzS4ipcTQFDw7T+6Tc+w7cpg3P77CQGcLnb09xAkZHh0ncBfRjF5U3ceZH+fC
      /NyeAeyhcdHXt2/1DxmQXViku89k7O49Tp8+jS59DAQCla62DEqsi5iRIb80SVvbs1QKOZRf
      ZxaoemuKouzqM/XKPyrZL6JtqF8vjXSfMvQZfTDFwQMDANwfGcYJFA4fPYqxxY7319oAXNdF
      0zR0ff1E97ABUKlUSCQSa4URK4rfKL9J9iFtbyW7Kq+wsSvbtS0BdVdtb+6L7/tIKTFNc33b
      u7pPsdLv+nQiV/qxUeMb5WvDUUrY0Jetfpu1g3etrBAC13WJx+Ob+rIW/yJZoE/e/Afeu3Cn
      LlkROJx//xd8ePVuXfIjd27y2htv1SUrpeBH/+f/Qc6vS5of/8Wfcm1orL62A5ef/+wfGZ9e
      qEveKef56//yp0znKnVIC37yV/8vb7x3vq62z3/4Dj/56Wu4gdhR9v2f/QUfX7rJ3//N/8en
      1x9+r0uz4/xf/89fMHr7Kn/zk3+uqy9jty/z1z99neHb1/nH137xL9MATp56ou4bV3ST0dEx
      ero66pIfHDyACAX1TKvTd68wk/colesZdPDN7/8m02PDdcmGvksul+Pu2IO65OOJBMn2Pvpa
      kzsLywDFSCDDuiyXg4cO4xSWsYNwR9lTp04hnAKJtm6WFpceKtvas5++9jQHjz9J0tjZuAAG
      jz5B0lLwCgtIK/0vcxNspdoY7Ktv5RdUCnQeOEnG0uqSHxsb4/iJ45um+q3Qd/QM/9Xvp2jP
      bF6+bIXF2SmOnzpdl6weS/PcmadJtvXXJS9DwYmTJ+uSRTE4cuQQibZ9O8sCSDj+zLM0WTsP
      t3hzF4PxfSxNDNN79Ikd5Y8dPwaKwtGjR+vqiqJqHDt8iMWZSZ44vC/aA/y6bgM8z0NV1U17
      gIdhu/X0Fyn7qNv2/ejJbRjGl96XR9W2lBLHcTbtATaiNjJs266r4ccBxVKJdCq1o5zv+6iq
      iqbV9/SGaONcLyvxqGQfddthGCKlJAiCL70vj6ptKSWe5+0op0O0e96N1X5pWGFkgjDcsb9B
      EOD7PvF4fFczALArXTwq2UfZ9lYs0JfVl0fVthACVVV3nAHW7QXnRm/w8aXr3B4eQ4QhQgjC
      MGRuYgJXCEQYcPPWUN2dXZiawPajNoQQiJUnT/S3JAwFUgiEqG8DU1ya4d33PmB0fHpHPxBN
      07Asq+6+7uGLwcjyyJfdhXVY92j07BL7j5xl4ubH/GLoU4JQw1djCBHDuHEJ29HY39ddd+OL
      s9N8cPUmeuCTyGQIC/MIKwP4FHIuRafCQF8XZlMXX3/hqYc3JmVkNIFHdm6Gpf59tDVtzX0L
      KZErPPBun/57eHSQUvJXd/6K//jCf9zVMulRYt3osJIZRu/eoLmti9BzUaSgo2+AycklWjq6
      sPQEyPqe1gDJdIZ9ZoakHp3QLWsSI5akXFhAa+/iQFuG9qYk2Xx558ZkyNTsPNn5GfqOPr3l
      4AeYHLnJ9ZE5vv6Nr9fdz22/cpenmnt4OCpBBUM1KPklUkbqsdDtOgPoGDhB2z6BoqioRw4i
      RHQ6ePDAIKqq7brD+4+eYP+G1wKnzPVbwxw5eYpULGIhDtTTmBQ8uP+AWFsfLz57alsx2/Ho
      am9CKhqxWGxX/V2LqeIUQ7khvr3v21/qDxWdokpUpfGPbCaLk3y196v8p3P/if9w+j+wP7Nx
      dHzxWOcKUc5OcPneIsm4RXvGYn4xy9Dtm6hC5dTXvkna0hnc3/dl9pelhRmKnspAX9eW79vF
      HMPj85w4ehC7UuHa8jUW3UVMzQSF6H9AV3UKlQJCCCzTImkmQUBciVNRKkwXp2lT2vBNn1CE
      WLpFykwRiIBABHSb3RyUBoniaHRs7+aRZgZFeKBbuMtzYMQxE2kU1aAgYyizEsIQv1RC0w2k
      44BpoCVTCM+jUiiQbMqApjE+2Mz9cIZACVgqLrG/bT8KCm7ookiFgIC4HiemxThuHqYteyGa
      nd0CSqIdwqgfANItIoUAVUWxMhRaTyOG7qG7HoquISoVFNNECglSoFoWwvNQNA0UhZGDGRbJ
      YagGTuigKRGrpqDghA5xPU62kmWgaYBetZdLhUsoQkHTo4emF3ogYGx5jN87+HuYpslrU6+x
      P7WfZz2TVLiMW17GSrUACvg20kxAJYdiJkA1QFXJi1a0eRvpByiGHuldSlBVWNlHSiFRTANx
      6BDDwSRlWUZVVARinbuHkAJN0dYbwNTti7gtBxi9fZ2YoaFrCqEsU5otMRPGOdzfzEtf/eqj
      HN9bQgiB4zjYxSXOX75B976DHD2w8wHPdjToxqeqRCKEiH4s18OwjNqPLKSg6sHihR6GZqCs
      +MA4tk3MMqOBp+oQebys/L3ynWEAUuAEIbFYHBmG0UBcmVWkjIxCqe5VVvxbHNchZsVqcmJl
      6Vnr8xoSwHVdYpYVfa+iRINBUUCE0f9r+yYCAqmAlJFewhB0HYRAUdVaf9D1mj+O67pYlhX1
      QYkG/lqvnqoupZRRX+qYeUMRRvp2HGKmEfVR+FEfFRVEACsPK2QIQuB4AaamoWhaZNAr/ave
      r6Ku6CYIwDRxfBfDNGq3Xu1z9fcTUqxfAvUee4o7t4fo799HOhEDBFL6eG0efYpJS7J+2uzz
      hKqqJBIJpF8m09RcF23r+/6vRINWlO0PW5JsdhOom8Lb5QHRbqjp3dLYu6VBH2VfKor6SHQo
      hEBz9foPwgAUVef4E9uvr79sjAwPUXEkze07D2hd1/do0McQ44Xxx2LtX0VD7awOHDpC2XaQ
      YucTzDAM6zoJ3MMXB4nkz27/WW059zigoQzAiidpTpik083bymRnHvDeB58gFW1XJ517ePSw
      fZuMmWE4N/zYGEHjGEBg88EHH1HxAhYWF7cVW1hcIBXXKdneZ5oBfOEzX5n/lT//eUFKyZL9
      cLfgRsFkaZJXBl/h/Ox5JouTX3Z3gEbKCrGy45eSh/rad3V2cXN0llTCJPQky+4ynuMRrCyb
      mqwmQhm5ZIwXxonrcXzh0xxrJqbFCN2QoixybvYcQgj2Z/aTMlO0xFqI63ECERCKEFMzUcMA
      bBcCDzF5HmX/WRTNhNAjHH4TRdNRek6jpDqRrk/o+aAqOPfuoaWigyDFtFBiFmE+T+XadawD
      g5h9fZRNhYvZi8xV5si7eV7sf5G4HqfklQhFSEyPkbEyeKFHq9qCzI5E9OHyOOq+5yH0QTOR
      vh0xJXYeAgfiLYhEF+69UZSuiEpWFCVif6qUopSEuRx6ZydhvkAhpeOqLgoKWSdLTIuRNJJ4
      wkNXdcYL4xTcAifaTmCGJtcXrpN38/jCJ22myZgZFu1Fzs2e4w+f/EMOHTvE6w9eJ22mMX0B
      todcGkFpHlhhfiI6lsAFMwm+DaqO9EGUZcSkQdTX6AYiJkhErjWqZSENAzuw8T0fBaXG5rmh
      i6EZBCJAV/XGCIms0qBV+L6/oytvEATYts2kO4kv/Rp96AQOiqKgKiodVgdFt0jCSpD38ihS
      wcLCUzza4+3EghhZmcUPfWxh44UemqKhKiqteivdAmLlKVBV7PQgscJ9lBUqL9/8BGYsjpW7
      g+qVKCsp1GUF4bqELS1YgLBtpCSiK+Nx/O5uTMeFhQVm2yz0WIx0PI0hDaYqU3h46OjElTiu
      4mKHNgk1QYfSSsaZRKLix1qJlSYiKlGGyBU6N9ASKFYaxStSjvegOT7q3NzKwGeFulVBgqIq
      YBjIio3S3MRcs0Y2jGahhJYglCGucNEVnVCGdMe60aVOURbJyAwlpYQhDUzTJBQhFb+Cpmh0
      xbvwPA/DMJj1Zim6RY56knhYQsSaUd1iRH8iQdGi/oR+dA4gQ0qyCWW2tDrwV84tonhSBXQN
      BZB+gDx8iPtinoqsrKNAdVWvGYOQojEMYCMWFhbo6Hh4hFaVk9Z1fS8eYAN2S4M24n1uFxO8
      EY2zBAp9rl+/ju0FdPTuZ6cAxSoLtOcMt4eHoXE2wZrB4L4eZhaXqZQKO4pXj733sIeHoXEM
      AIglUjQnLTJNrdvKVPJZLl29habrn8kZbg+PDtOlaUKxc4D8F4HGMQDhc/HSVRLxOKVyaVux
      iYn7yKBCvuyt2zjv4fHAXHmOn43+jJnyzJfdFaCR9gC+zUK+RHtLEwuLWU4cHtxSLJVIMDI9
      w6mYCeGKo9uaQ5cqGyA3kKm111eWTqEMCURQ8x7dnNKJVW/ElRZZKyMFK5RK9PraJdnGpZmi
      rL62xklOSFHri67qKCjb9jv6/Ep/FJVVslhZE8OhrO/i2n6svd7g/l3ty9rv36hHKVcd4kIR
      Iojk1zrv5dwcf377zznScoTh3DB9qb41Otygvy11urtlrWSzvESu+y0bggWq0qBSCARRZrSd
      fPR936dSqXC7dJtKuD7vzsYfMmoVdHRSaoq8yEdteD6madbeV1EjpSLpNrs5pJjEcsNEP5Jg
      3YQqw8gTVI+8NMt6C3JWID1vdZCuZFerGYBCjYufONjKnJpDIrEDm4QesR/VH7Daf0uzOBE7
      Suvixeg7pVg1gCgd2xrjAqmoFNufheFRKJVQqrJVfVbHnIg8WhVdY+xghgWZ22SAVd2pqIQy
      pNlqpk/rY9gZxg1dQhkS02K1zziBw1Opp1B0hTF7jCAMeD6wSHjZlS9e0V/tHsSqroCi2gUT
      +dU+SlY9QqUEVYmoUVVBnjzJsJgiH+Q3ef6qqLV+N4QBVLE894Dzt8Y5cuQIg/3dhIGP7TgY
      ZhzLXD+ZBUFQo832aND12KNBV9E4ewBAhD5ijbnevn6F1376Y0ams5tk97xB91APGsoAYslm
      lKBCoRjFEPf09tDW0UNLZrOf/h4Nuod60FAGgAKpdIbqBm9uZoZkUwumvnob5fwiF6/exN9z
      h34s8cHUB4/Vg6lxDED43BmdQQns2p4uCFZC6NZgcuIBBDZuoOwtgR4zOIHDexPvUfAKj40R
      NA4NKkMc12Xw4CHmchG/f+rMWYSQqGtiflOJBKMzs5wyVFiJm6nSicA6NqDqGOcEDs1Wc402
      E1Kw5CyxaC9yqPkQyMiJanOf1tCgoQvaGoML3YhJ0a0VxmfNkiwIVmJ11VX2JQwRlQoyCNAy
      GaSULFQWKPtlbmRv8IPBH6AoCqEMV0gbBU3RagwVcoUxWRtLu3KnkRJCak5mEHlObkXLrmNV
      1Khfa/S3lj2rXgspCESApVmRD1borjS1klZGQskv8d7ke/zbo/+Wv77z13yt72ucbD0ZtSEl
      +BUw4qxjxdbdQ0T71GoerN7ZJqxlCNcaWjUOuGFp0EpxmdnFAn19PVjmw71Bfd/Htm1uFW9R
      CSubgsoVFEQo8AKPhJWo0WIpNUVRFjEVk4RIsCAW8EKPuBFHSFH7fJfZxSFMYst3oh8rcMBI
      1AaQF0qUwMWwYqs06IxE+j7CsVFNa2Xwr7h5A94K5WcpMHGwhekgi2mZ9MX6GKuMoSpqFJiv
      GAQEGKqBqZqcjB2jdekSMvTAt1HM5OpAXoEMXKSqo2gGxY4zcPc+SmnlQHEjBa8oUeYFXQPD
      4MHBDHMiu+VZiKIoKFKh4lXoSHXQr/VzpXgFDQ1d01EUJfLeVQ36k/206q1YpsXl5csIIXg+
      MEm4WbwgwKwlBhBIVUORokb6AhS1HhjP1zxApYjOD6rB/IqiRoU7pIQnn2Q4nGI5XF73uzc0
      DVpFsVgknU4/VKZ6DpBMJvdo0A3Yo0FX0Th7AMAp5Xj7vV+ymMvvKGsYxp4v0B52REMZgBSC
      crGA4+0cFO/7/p4v0B52ROMYgJR4ToVUugnL3J7dCTyb++NT6PreDPA44nFbcTeOAYQeQ6MT
      xCwDVdu+22N3bzM9PUnB/mzeoHsHaZ8/pJT86OaPuDB7IUqX+BiggQzAZXJ2Edexcdztlaep
      Kr4fYBjr4wG2GtAPG+Sj+VF+Pvbzz2YEn4MBSSkfm8GyG4QiXOfzL6RgvDiOrupcmr/EjcUb
      X2LvVtEQLJCUEuFVmFl26GnfPicQgAwDFpcLtDRlqFQqXM9fZ6GygKEZqKqKpVs1j8qKV4kG
      uAopMwUCUmqKEiXc0KWVVrIyG9Ggehxd02vnBL1WLwelTjx/t5bBQOrxiLJTVEQ5S6ia6FYC
      RdUoqRmYjWhQ6boomkZYKqEYJmoiQVipIIRAN3SUWIwHB5qZVBfwAo+SXaKzqbNmDKpUo+S4
      Rpy4Fo+S4y5dQgYueGWUeFOUUUGPR4Hx9jJSM1A1A6GZFNqfQ7l7H7W8EmAeBEgRVbaUfoCW
      TNS8KhVNY+Rghjm5iK7o+MKv5U1VFRU7sInrcZbsJfZn9tOv9XOrfIt8OY9u6liGFRlwCEW3
      yLd7v42qq1xYukBKT/Gcb5D0c8jyIkqyDVAg9JGqDvYSipUBLaK8C3SgTBXXeXpvcuMWAjQN
      Tp5kKJigIApRctwVGjyUIbqiI9giOe7jimqAu13I8tH5K3T1H+DUsYPRm6FP0Q1XcpmuouoN
      mkwmd1UjzHGcuvcOj0r2kbUtJUyeI+h5FqBuerjh7hNqNcJ28gZoiJNgRVGIxWII16KtvQPT
      NLCs6NQRoWIRbqkYwzC2rBT/MAgh6lbyo5L9TG1vCKxZB6cA99/GH/zars4BHsv7rEMW2FG+
      cfYAwMjwbQqlCrpu4FUKXL58mUtXruHVUYH8C8evOLG6o6NbNCXrTyV4+x+hvE3mvPICWKkd
      +yalJCwW6/s+ooS3DbCQ2BINZQCDBw9RcTxE4GIlm8jEdabGR8kVV0u8SilwXS8qyldn8T2g
      ljnuV4KUcPPv1w+sC38CU5d22Ywk95d/idjgxXpl/gqX5y+Tc3KbPnN98fp6n578BBSmVv4W
      4Kw5NCzNQudJ2CHVYjA/z/Lf/G3d/f7x3R9v2TeAir8ajfc4MmsNZQCxZBp7eQ4r0QRAZ08/
      R48eo2VNpfXxuzd55/0PsX1Rdx1cKSX/+ep/rjl95Zxc7ceq6wfLT8LM1bUNQqoTcmMrmc42
      fN8aRzQpVzbGQuCPj2P278MbHcUNXH468lOGc8PMlGd4UHjAn9z4E/557J+ZLc/WPjtbno2c
      vwIHhn4GfWegkoWRd+D+B3D+j6Mv9UqwcAcOfAOMBP7UFMJ1KbzxC4KlpTVdl7hDQ+htbbW+
      DmWHarr4aOqjdYPdCz2OtR7jF+O/oOgVa20IKSh5Jf7o6h/V/v7RzR8xU55hsjhJySttim+u
      OfRBpM8vwFgaYhMMgBRMjt5mbKGCoZuceeIQD6bm6entIRlfraQyfOMSeSfkxJPPYuCjaRqa
      puGE0ZlATIsxU57BCz1SZgpLsxjODXNt4RpHW45i2zaqGbEGdmATiABFUfjB4A/QVI1QhjiB
      Q0yP8ogmTD16+jfvg9aDkO6G5XGoLEWvPfgIEq1U2p8ibsVA0yj80z9hHjiA3tqKNz5OML9A
      sLgIikLi+edwrt/g3vP7eGLgGd4cf5NnO5/l0vwlmqwm8m6eJqspSjeoasT1OGeaTpMY+Tkc
      /1dgpuDWT6ISSdOX4fB3I2OcuQIDL0HrAXzfx5uYwH79ddKvvII7PIwolTEG9iN9P3Iu83zM
      wUHsa1e5cizJqX1PMV2eRld0xgpjfHf/dyN954ZpspqwNIuLcxc523aWjxc/JufmWKgscKbr
      DDknR9pIc7T1KH859JcMZgapBBWe63qOwfggSUsHrxzpcd9ZSHVEhvv8fwvJzug+ygtUer5K
      Ip1B+j7u3buYBw+ixmI4d+4gHQdh22itraiJBHpvL9lilkALaI+3k/fyhDLk4+mPeaH7BXJO
      jo5ERwMZgAi5/+A+QShJN7fR1d5C4LtMT0/T3N5DJhltdtxynnsTC5w8dhjPc7kwf4FyWK7R
      d0IKQhlyrPUYi/Yid5bukDASvDr4Kov2Is1qM22ZNhbtRSp+hX2ZfbiBy7sT7wKw7C5jaian
      2k/RXwlJLA9B95PQtC8aeKoeGcBX/vuIvhv6J+g4Rjk3R3BrCTSN2PHjlD/9FKOvD+vgQcz9
      +wkLhZobtCiVcBSFZCq1TgVu6OKGLhkzA1BzjXZtm0TMqtGF3H0Dep4GPRat+R98DP3Pgx5t
      eqvOcHoYosbjFF77OalvfgNvfBwkxE4cx5+bw750ifQrr7BYWuKd2XcYyAzwQvcLTJYmuTh3
      MUrW65f4ncO/U3MrD72QZCIZ3cdKZohKUGFkeYSnOp7CDdyIipaS6fI0zbP3SZYnwUrD0Vci
      HbolePrfw9W/iNzJmwehqY/izATh0ByKqmEdPYp77y6iUERZ8QyOP/ssiqriT01hnjjBpeIw
      uTCarZqsJmbLs/zw0A95f+p94nqcmdJMYxhA1R3ad0pcvnKd1p4BDg/07vi5rWqEbaq1tSFN
      xmem5cIAtM2sk+M4WJZVd8XJR0k9VpeGjy0NKoKVmmEBOEVItOy67V8rGrRaI2xpeYZAi9Pc
      lFl1iw09CnZIJrXe7bVW9A4PtjgGCNmcmUxBQeqSUN85a5mpmsQClYTqb+gsgL/5A6rAEqLO
      da2Cq1FXPxSiyLeEupJVuQ74sRhhxcaoZ4+kKDhafTpRFRVTmnXJwkrfVbG9DlUglaKqT6lK
      rDr3dUo8jivcHfvSEAZQhWnFUWXA7euXseIv0tWSAhRUdfNTVUpJEATcr9zHk/W5EuiqjhEY
      2BV7R9meZA+ttgdL03W1LZUkbhZksIVxbISikO1JkbO3z4BXhaEaHEkchPmbK1FfdaDrabz7
      9wnriJlWNI357hhFu7KjbNJI0mP2MJIbqYs80FWdIzawXEehdEDSgjNfn6x14gRTpSmc8sP9
      wRpiCQSAlFQKi1y5NULCMmjtHSBtRY/2ZCqNaay35WpAhKqq6LpemxEURXnoteM4xOPxTe+F
      YYi6Ut40DEM0TaulX68usaqvb3Xtum5t1tpKrsqyqCvRTbZtE4vFan+vfW/jteM4URXNHeSq
      174fGaFpmjWqWFXVbfVS7ctOuqvKJhKJuvRd1UtV3w/Tn6ZptYCYneQgWuZVq4Q+TBeNMwPI
      gOHRB+Tmp0keP0NPc5xrV69wb2yCF77xCgd6ooS5ywszXBsa4czzZ5FBgLpSTMH3I0ZIVdWH
      XlcVp6pqrZiDoihbXkNUo7f6erWebvX1tddhGBIEQW0Amqb50OsgCHAcpzZIwzDEMIwtr4Mg
      IAgCwjBECIFhGIRhVAVH1/VN19X7U1V13X4gCCLGS9O0dddCCDzP2/T6Vnqs9mU7HW/UY1V+
      Ox2v1WtVdis9b9Sf50VnQQ/TuRCigQxA+PihQkvXfqRbwogNkmluoa1pkSCMJrHs/DRST2Dq
      GqoCvhC1OsFrN0MPu65UKrUwup0+U6lU1oVm7tRu9bW1G7ntroUQuwoV3E0GjLUhkfXoJQzD
      Wl92kpdSYlnWrvRdve+dPhOG4UPbXqs/0zTXGcp2em4cA9BiZOIGzR1dhERP3yPHTnL46HGq
      53ltnb1M3L0JZgpd09D2AmL2sAMaYg9QXZu7lQILyzYtzU0kE6vOX9WEuRs/U51Gt/MGdYOo
      YNpCZQFLt2i2mimUC5iWybK7TIvVgqVHT5Bq6o9qtmgv9BC+IGaZUFiT6ttMQLxlJVOEG6X7
      8G0coRJr6anrfmUQsFRawjd2duVoibUgPUHM1KJ0KIEbUYjlBUh2gLpy76EPpajqZRBvRwq5
      SoNW3YhVlXBpCa21FWWNzhzHQTVUdFWv0cdrUfJLlLwSbfE2Qm9rx8Tt4DgOMY3oICzZtrPs
      50iDuqHbGDNAlQZVgjLnP/mAk2e+xjMnD0Vvhj5FJySxwR26uu6tLoG2wt/e/Fue6XyGucoc
      OTfHbx/+bS6MXyCeiNMZ72Q4O8yrB14F4OLcRZacJb438D3cwOXqzFWeb3ueRPE+FMYhHVVc
      5P5HcOa/htlrMHURUKD3acCqe0lTev99wsFObOvhrI4XekzmJ3kufYrE7AU48l24/OPIHeLu
      GzDwNdj3QiQ8/klUbTHegh/rpfjLj9AsC1EqYfT3E2SzqMkk7oULpL/7XWJHj677rndn3+VY
      67EoT9IGvD3yNn3pPqaWp3i29dldZYUASIy/E/kvPf/fbe3FulZ2F1khVFXdNiuElJI/vfqn
      jWEAVTjlIh29A4zfu0V/dzuWrhC4NtJMbZKtOsOdmz2HLTbTmu3xdlRF5dzsOf7g+B+w5Czx
      s9GfYSombuByqv0U8/Y8bz54E0VRyDk5mq0oGOfi3EXOdJ2JEm8tP4Aj34ueugD5KVi8C5MX
      wIjBwW9BphcqqzSiPzODff06irq1K5awHTrbn9vxx5ZS8vbE29FpabByj24R5oeiU9WF4TXK
      W4ZD34lOi30fRdUIlnIgBUE2i3QcnJER0t/+NsHsLGwwAICZ8gxpM03KSGEHNpZmkTSTxPQY
      z3Q+wwdTH+AEDp9OfFqX96qpmjxDa+QD1DwQuW/oX0w2v0AEFLxCYxlAqqWThD7J0WdfoCmu
      c/PWLVQkyZ7DtDWtT5BbTYvyQvKFLWeANx+8SXeym4+mPyKux+lP99Of7ufy5GWGikMoisJ3
      9n9n3WfeevBWRFGGdm0QIILVbGsQzQSj78ALf7jt08y5cZP097730FPhSmVn3r2adW01t7+I
      ll+Ld+DgN2BpLDobULWVusGrycSSL79Uiwco/uIXoOsECwuYAwP4ExObvsvSLLJn2H0AACAA
      SURBVNzA5cLsBXpSPWTtLBkzw8n2kySNSPcv9b1EpVLhW/u+tWPfa/d55R9A9aD9GOTuQ8ex
      uj/7WbDkLHGm80xjGUApN08lgMvnPyHz7e/R1d7C2MQMnTFznczt+3OcPnUcx3FIJjdnjgYw
      NZOKX+G3D//2uoE4kBnY9jMdiQ5eG3uNmL7ifCdlVJRi7UDuOhUNtC0Gd/mjjzEPHQRk3S4R
      O2EgMxAdOjUPRLEAnScjL9B4S+SYN/QzKExDZvv9h5rJoJgmqe98FzUWQ0kkWP7bvyPxlbOE
      y8sUOjLEjXjNAS/n5GpFs//h7j/wgwM/+NVvYPBFcGah7SBc+2vI3otSSR5baTNw4dZP4fTv
      1j7i3L6Nd/8+yooBSz8g/cr3KPzjP9L0W7+FNzUFisKs6TK/PM/ZnrNIKfmn0X+qGWslqPBy
      38sNZABSULQDhG9z+szzNKfjjE072JUSZdsFomXQ1OQEqpC4gfLQYtotsRbswObJjifXvR7T
      YxzNbJ7+AU53nKboFaMnP0Tr/K71n8eIR45oG7svJUFuieD8Us156/PA4ZbD0WzRczr6B9Ay
      GA2i5gG48xo89QfRnmAbJM+eXfd36sUXkWFI4Z9fR1HgumXwlYGvsFBZ4MPpD+mId6AqKiPL
      I/zB8T+gLf7wzetDYSaheUWHT//76P9bP4lculHgwYfR0qicRXqS0PNwR0dp+o3fqDVRfPdd
      yh9/TFgq4c/OYl++TPoHP+D63Z+hmzrL7jILlQUGmwZ5sn3979VQBrBciFwD0qkkqqLQ0dnJ
      7FKRrtZVLj6TTnF/ZJaTGgTu9pvII81HGEgP7Lobz3U/t5qloXk/tO7slFdF6sUXCXI5tNTm
      Pcvniuf+m+j/RCt85X+AeDOc/r1dNaFoGrGTJ1CTSZ4wgtravyXWQskvYaomz3Y9S2ts+4qd
      vzIOfB3mb0fXLYORnuduIGnBXbCJP73+AZP8yldxhoZo/t3fxbl6jfiTT4Ki8EL3C2imxujy
      KIqi8FTHU5vvs5FoUIgiviq2SzLx8JyPsLU36E74tQ6KX8Fj7w36Ocj+WnqDViGE3JEh8X2/
      5guy22rx9bAvRa9ILBbbFeW3a3rwEbW92+S4j7IvD5Wvnmmo2rayUkqk66JuMIydaNAqGsIA
      qpArVRVFHZPWxuS4c5U5hrJDnO05SyhDLM3aOud/HXhv8j0ONx+mNZ+HigntR7bq7I6c9h4e
      goWhKKbaiEcHej2nqQ5X4XmIcpnyRx9BKJC+j9bcTOzEcYzerZekUkpGlke4mb3JYNNgbTnU
      UAZw+cO3mauodPb08uyTmbo/V/SKXJq7xMt9L/P+5PtARCF2Jbp4sv1JFEXh3vI97izdoUVt
      4VDHIbqSXVu2dX3hOmkzTX+6n4raAuPvRIxLoo2oEsRcdKp5/4OoXsDRV8FKI+08pfPnEa6L
      KJWIPfEEsWMR5Vcr+vArGMxDK65LuWtuXfp+lCxLSpSVmbP6HW7o4gZRVNp4cZyck0NIwTf2
      fQNLe/h3SCm5mb1Jf6qfpljT1nWXqyjOQXY02rwrCszdhDuvI6w+8neyiFIRvbub9Pe+h7oy
      iwnXw75yGefWLdRkktjTT3Nt4RrxeJyBzEB0rcf54eEfcmH2Areztzneerwx9gBV3Ll+gbll
      h3RrF888scVTF/CdMuMzWfb399QSY709+Tbf3PfNmhtDFdcXrjOWH0MgaI218nLfy5QrZS4u
      XaQr2cWxlmO1QSmk4N7yPZadZZ7vfh5FUSL33HgMLv+XaLAHXhR/G2+BvmcjDv7G34GqUkkN
      kjjwfG2wF994A+vQIYz+fgo//3mUHS5fIPP9V9CamqhUKtiKjaIotMZaEVLwwdQHUV3gthNk
      zCh88q3xt/hq+1dIzl+KBg5EA1jVgZVg+aZ+iLdGgeb7z+InupGKihgdxb03gtHTjd7Whjs2
      hiiXo+ITtoM5sB/z8GGulkaZ8+dQFRVLs0ibaQ40HaA11sqivchH0x/xtd6vkTbTVCoVLucu
      U/JLvNT3Em3xNnzh84v7v+Bwy2EWKgtoisbZnrORDvNLJObORecUlSVoPQDLE/D0H9TqA1dR
      LuRJJJKgads+LMJ8HikkSjyGKwTT7jRLzhLHWo/RZEXJFKSU3MjeYHhpuIEMQPicP3+e2cU8
      X3vxJdqaty6QcffmJbIln1PPPI8hfbJultHiKC/1vbSlfCCCWqq/2qBOJLidvc1kcZLvDnwX
      RVH4ZPoTDM3gTOeZmvJrBRtCPxpwW/0oUoIIqbjeuvWrlBLn+g2cmzdo+jf/BjUeRwYBhdde
      I/nyy4y4czxwxrEDG1MzcUOXF7pfQEHh4tzFml/OybaTtCpNJFQvigF2Cps5/6UxEH5Eiy4M
      4TcfonzhCrHODqyjR/EnJiKXiP37awxVkMshymWCuTnk4cMkm5q2/WlCGfLu+LtkrAwnMydJ
      JpIIKXh7/O1abPCLvS9G6SeBawvXUBSFolfkdHaJ1JGXIz8m3YrigY3YhjJPrNd3HainQEYg
      ggYyACmZnZnk7sgY+w4cZbC/e0uxsaGrjM0V+MrXXkQTPneW73Ci/QSGVh/3vlbJ9/P3ub10
      m0AEtMXb+GrvV9dN3Y+iuon0fcoffUz5+AE6O/vrWhY1YoWYK/NXONh0ED3Uv9QKMQ1hAFJK
      wrC+cD8ZBiwXy7Q0N9WCOHZDg9q2vU5ps+VZWmItmJq5ad26UXY37X6e8rttuxok8rCDwi+q
      L4+q7Wo+2Z1o04bZBK81gGKpRHrbwySFTDpVi47yhc+9xXs0W82M5kcxVANd1UkYCVJGivZ4
      OwWvgKZoNMeaIxfp0KgN9o5YBwAi3OzcVY3Iqge7kX3UbVdlH0X7j8t9Sinrkm8IA1CU9TV/
      6zng8H2fMAwZKg3Rkmhhzp6ju6mbgfQAlSByNCv7Ze4U7qCrOpqiMVoapUlpihIqiQAFhYQR
      xdqeaDsRyeRHSZtpWmOtJFQDS9e2TIOyEdVopnqxG/ndtl2Nh613CfQo+/Ko2hYr2fd+LQ7C
      qijnF/jw08t07zvI6RMPrxJZPQd4Nvksuq5ztGXVvydjrVKoG/3bN64zncAhlCG3sreQSHqT
      vUgkhmpESWgfvAVuAU7+VsT+7KGh0DgGIKM6sC0tretKJEkpGLs7TEt3P9m5Gfr6epiaW2Kg
      v+eh3qD1IqZHa8jnu5/f9F4lY0D3ocgleui16P90D/Q/B9OXINUVOXslOz5TH/bw6NAQm2AA
      vCJ3xuexEhkGe1cHlJQhpfwin358gWRTC4WKS1M6wRNPPYsmvFpalI1pTba73pimo/peEARo
      K/xz9brqa1R1tQiCAHPkdZACr/kQuvShkiUozOEl+winQmQQ4i1lsdrbSRw9Bh3taJaFDAKE
      66KrKsL3mQmLlLQKfck+hBQIBLqi44moUHZcj6Og4IYu0hWkNQ+Ej9ATaH6J0MyghB6qV0QG
      DrhFROvhqG+Khf9gAmUph5pOo5oGQW4ZKUUUR60oVEZG0VJJrM4uJrtjFNQyGSvDvuQ+QkIC
      EXBv+R5pM03RL9JqtRI34sSCGPPhPL7w6Uv1kdSSzNgzNJlNhIRYioUnPUp+iSAM6JJJkqaG
      1IyoMoxmoagqntQx8FFCn0A1UY1YbXYOggBdUVCEwFcUdF2vESXV62oGiWpaFCFELf1M1U0C
      GmkGUHRmJ8ZwQpXAP87hgV5C3+H+xDQTYyMcPX6Y4XsTxGNxKra3EuYabVyrm6FqPpjtroMg
      qEWSVQe6rus1Y1ibz6ZKT1aNBCIDMKwMLI8TNB+snVIGnocIAhIHo8FlBQGGqhLcvUv59i1U
      QNF1RMXGSqdQm5vRetswdIPb2dtRShNNJxABuqoThAEFt0AQBrTGWzmRPArFB8jQRzpFSLUj
      SzcjXj3VAbqFjLchJ86DEUd0nEZraUFvb4cggCDA7IxKMFEuo5oWqePHUaREdRxa1YCU1oQr
      XN4df5dQCWmPt9OT6kFTNJJGEidw8AIPU5ikzTRu6HJ76TZ3Fu9wtu8sU8Up4kacgl0gaSVp
      jjVHui/PgjuPVPSonJMQ4CwR+hI904YifITnR2d6Wjf5+zk83yOWTKIKgW3b6KqK9AMCKTD0
      yHfIeO5ZrtujVKiw5CyRVJNoepQbVoYSTdcIRdgYM0DVokUYIlYGa3XQIULm5heIpzKIwCOT
      SVMoVmhuSv9K3qCfmZbzK1FQR/fpX7ndz6UfD8FuvUEblQb1PA+pSSzd2tb1omFmABn63Bka
      wgsErZ099HevLINESDzVRDoZAyLlNGVStalOUZQt0/RdXbhKW6yN/nT/+u/ZRRGHLWX1eBQk
      s+H13RaH+Mz9qEO+VqNAiG3jk7+ovjwKWSEEMTMGks21CFbQEAagKAqmFSMdU5laFszPL3Jg
      X2+kDEVimCqmobO8nCeRSuF5PqlkRF9uVSNs0V6kIirM5+fpSHeQNlcZpaJT5NLiJfZn9tOb
      ir7DDmzeePAGv3nwN9HWuOYGQRBRicOvQ6wpSkGubj3b1GS3QFgqReF9Utac0HxVrYumFFJg
      BMaqbGE6YqOMNU/KMIDJc1GBjJYBlP0v12hQKSXZP/5jWv7dv0NraooOkIaHcW7dJnHmGdx7
      9zC++tW6KVPXcxnKDzFeGKc51swznc/UwhB3q5fPIltd9m4nL6Vk3p5vjCVQFb5T4uevv8Wp
      My/Q1xLn5vAonmOz78gpuuIeb346xGBXion5Ai+9/HVU4TGcH6Yj2UFXoqu2bn9r/C1e7nsZ
      ieTdiXd5ZeCVWn77i5MXKcoiEknGzFD0imiqxsm2k5ybOYehGXQluniu6znswhIJKpB7ENUH
      mPhkJQ+/BanuyBikhLu/oKwkEVM+BAHWsWMY/ZGbgzc5iX3pMqJSRonFURNxCAWTT/QwwyI9
      yR5OtJ2oTeH3cvcYyg3x6uCreKHHJzOfcLblOZJTH0T+PgClBYg3Rb4/S2NROdH9X4VMP4y8
      id/7AlKPY1oW7sgIwcIiYSFP5pVXKJ87hxqLYR07Rumtt1DTacQTJ0m1tOCGLh9Nf0RST/J0
      59MYqsH1xetkzAwHmw9S9sv4jo+t2nTGOyl4Bc7NnqPklXi5/2U6E5213zLn5EiZKfy5MRL5
      4ciRsO0wdJ2M0sksjUVZLFKrhEcta5+UiEIhymO0nEdvbwNFQY3H8aamsK9cJfni13hn8Tzt
      mXaOtx4nrkcPBCklI/kRRpZHaI21NpYBFLPT/Py98xw7doLTJw7w/jtvU3YCTr/wEu3xkKGh
      Ye7PLtHT2c6xJ55GCWwc1eH60nUKXoFXB18lEAEX5y7yrf1R5oLR/CgjyyPYgY2Cwre6v0Uq
      mSIUIXkvT4vVss4jVEGJPEiloLfskBh7A176nyLPRSlh/OPIOa4wCckuKM/D4MtUzLYoga3v
      Y9+4gazYWCeOU/7oYzK/8a+iJ/+aZUj1x76RvYETOPSmeglFyP3CfY61HuPqfFSS6UDTAfqs
      vs0+MlLA3C3oPBH1repTFPr4QUDpg4/IvPAC5Q8+IP3971O5cJEwmwUFMq++uq6p69PXuVe+
      h6ZqvDLwCkWvyIW5C2iKRm+ql3vL94jrcboSXRxJHSGZWP/EF1Lw1vhbHGk+Qm+qlw+nPiSU
      IaZmcsYaIJVpi+jixTswcx32n4VMH9z+aeRkGDgQb6GktsFUiWBxEa2pGTURR4nFCGZmQVNB
      CBRdJ/Wd70Qzt2OTDbLcL9xnyVkioScQUrA/s5/jrcdRFbWBDCBwefPtd4glM/QNHORAfzc3
      r17kzp3bnDj7Ckd60gzfHaWvr4+ZhRzHDh/A89zaEsgNXP7+3t/TGmvd5L8+X5mnxWpBV/Va
      duN6UKlUSFj6lp6LiDDaEIsA4i3rD9ikxLlzB396mtQ3vrEuC9u6tlcyPo/lxyh4BZzQ4Wz3
      2U0Ocr+KM1zplx/A3CyZH/4QbYezkkqlgqd6WLpVe5KuhZRys4fsFjKfzn7KeGGc7w9+n4yZ
      Wed9uy28SrScm79F2ezGkgp6685xyFs5w9mBTUyLrdNf4xiAlCzMTnLu3Hn6jp3hqaP93Lxx
      A8916Dpwkr72zQEyruuu2wN4oYehGjvm43kU3om7HaSPsm3f9xGehy4EWvrhJ+qPui+Pqu16
      vUEbYhMMQOhx8fIVmjp6aW1KgqKSaWrGtGLR3xvg+36U03KFBq2l99aCdXn9q+nNVVWtpTGv
      HpSsLWu03XU2m60peS1Nt/G6xrhIWatBsNZjce11LRfqSnZjIQS+72+6DsOwlh4dqP1tmua6
      67Xen0EQ1HKmGoaBn4/KqBqGge/7KCsHS2uvq2nMq9dVD9u111Wduq4LsEmv1etqyvfqddVn
      Z6Net9JlNVnYVu9t1OtqEgW5SbdrddkQM8DarBAAxWJxXVry7bCXFWJr7GWFWEVDzAAbs0Ks
      zVe/HR5lVogvQvZRtt0wWSE+g+yvZVYIu5Dll+evc/DggR1ngI1ZIdZu1PZQH2QYRkW8pawx
      YFUdVvW5VUD/Wl37oc+CvUDOyTHQNEAQBhiawfnZ86iKyhlbBWcmYtAyvbDvKzDydpTUy8lH
      aSY1E+xlhNlDJeujtbYSLC6i6Dp6ezuKYYCqoug6iq6jNa3G/laTmKmKioJSS+9e7V9DGYCi
      qsjQX5+MdhtUy+O8P/k+trBRhIK+4rcvhSQkjBzM0DneeZwH+QeUnTLtRjtFpUhcj+P6Lsfb
      j1MJKwR+wIK7QMkt4XrR64OBin3jHLHuIwRdT8Otn6DF0oSHvwfFOQy/iJQhspIj1Jrwu46B
      piHyeTBNNEXB13U0zwPDQDoOajJJOD5ONqlxeWkGL/Doy/SRMTJMliYp+2WarCbaYm2YuomO
      ju4riOwtUCAsL4FbQjh5sDIYqVb8YhZkiKoZCBT8fS9hX7pGIhZHiceojI2hJhKIIETYNkoQ
      QDqFahhoiQQj/THmwkUEkZ+UpmqRUx4GKGCHNqpU6U51czh1mPdn3qfiVzA0A0uz6LA6SFtp
      LkxdQEVl3p7nxb4XaTaa8TwXPxGlZgxy4xjv/2/IU79LkJ9Bbz4IikLg++hdTxGUKphqCbtQ
      wGzvQE0mKE9MoCkKolJB6Dqq4+IvLBD7+stcLd8jJ3KYqknFq2DoBhW/gopKU7yJU+2nGmMP
      AEDg8uMf/x16opknTj/Dof3rA7+9SoErV66gWWlyhRIvvfQ1Qs+h4BdoS7Rt6wF6Z+kOD8oP
      +Gb/N5GhJPRDFEtBRSUIA65lr5GJZTCkQW+ml4SaQISiVlMLIF6ewL//CcqxH6DJgODe2yip
      Lox0BzKWQSo6JQ+8Dy8iPQ/pe6jxOEY6TWliklhrK0oiHuXoj8VIP/0M8ykNPWES1+JkvSz3
      svc42X6SlJGiFJS4PHuZpJXEVEyezJwio3kgAgI1FqVhkRIpQgxhE2gJJEqtEF5tbzQ1hXRd
      ZFsbenv7poJ51eu1m9it9CgQICLZKo0chAFSieImNnrVrvWe9bzVZAFBEGBqCkLRNsnpul5j
      gXzfr4VzbiUHqwFR1VVA9b2q16ineLw9/nYDGYAUTI7f5/btIboOnOT0scHaW5VijqWST256
      jLIfYhgmR594BlMJtnSFeBgeJQ1q+X7k8iAE6hbcuwyjTNOKqj5yGvTLDop/1G3XS4Nu7wH1
      uEEEzM0v0t23bxPtmUi30BIT5GxJX28vvtQxtfXM0eMArakJNR7fcvBDlJD2YU5pe/j80RAz
      QJUGFaHP/PwiZjxJa/PKwZeUNRfpjdijQTdASvDKBFoku0eDNsgmuEqD5mbHOHfpCv0Dh+jv
      XckLFDgslgLam9dPjXs06BYIXLj0Z/hf+R/3aNAVNIQBVFGqeBw+MEg804RbznPzzghISd+B
      zQUtNtKgjQIZhlv6BtWN3P0oFtnY4oe3c1EA/+cMIcWW1SMbAQ3Va8s0mJyZxTINzESGfT0d
      OI79eGRhLs6u/3v8k6hg3S6x9KMfbQr6WLQXmS3Pbimfd/Prgz1u/SSquLhlH2eg5UDkXfkQ
      CNum+M47dff5z2//OW7o1i3/OKGhDCAej+MHAeVKJcotWarglpcpVlaVX8jO8unFq7grvkD1
      4vzs+V1FMq1D4MAH//v6KLDlB3Dn57tqRgpBuJwnmJ+vpfO2A5uLcxe5vnCdvxv+OyaKE+sy
      Qp+bPbfaQGkeEu1R3eLyQhQXcPMfVt8vL8D+r0T5N1cgbDtin9bAvXsXf3LViMp+uXbthd66
      CpDVQ7KR5ZHN9yMlr99/vfb3rewtAhHUVUESEews8zmgoZZAqqbT2pTBMAxEGDJw6CgHDh+F
      NfGeM9NT6Ei8UK1rCSSlxAkd3rj/BidaTzBXmuPa1DXO9pyl4lfQtYg7HswMbn+SfP+DKBt0
      NRW5V4pSoVhN0ZIkvf7Mwr17F72jA625mbBYpPTee1hHjlJ8803iT53GGxnlzn6LUA/5dOZT
      9mf2cyt7i4Se4MOpD7E0i5NtJ+lN9a74tK/0IXDg1O9EVSrvvAb5yei7Qx/u/xLKWTjyCvg+
      5Y8/xkPBmxgnduIkaszC6O1F+j7O0BBGTzfS8yh/8inn23J8N/UqlaDC6/df50DTAV7ojuoP
      L9gLPNXxFHdzdyl5JY6nj/Px9MfE9Bijy6PkvTx5N0/FrzC0NMSluUtYmoVE8jtHfmftDxHN
      mt2nokzbb/0v8O3/OToJrqZ53waiUkEGAWoyuWn5uPZUOpQhI8sjHGw6iJDRgV5DsEAAhD6X
      Lp6n4IS0tHfzxKF+Ru8/IBSS3n0HaEpFg31u/C7XRmb5xtdfQgYepaDEvDPP7aXbaIrGM53P
      cHXhKpZm4QkPUzW5tnCN7w9+n+HcMAPxAc70n+GXk7/EDV3a4+0EIiDn5pBSEtNjlPwSB5sO
      MhjGScxdjAZ9//Mw9l40wO69HdW5SrbDe/8rNO+nnD6AkrcgDPFnZglzSyimhdbcROrb36b4
      1lskz55FsSwq587hPnGM9q6+Wn3ivJunElRYtBd5ou0JxovjTJemOdB0gGaZJOHMQMfxSFfn
      /m/oeiKKR+h5KqqyuO9sNLhYPQfwzp8nefYs2T/5ExLPnMGfnQEhyfzr38C+fh3nxk0yP3iV
      0SDL7eJtPOHxw0M/5JPpTyj6RSzNwgkcXhl4BUu3GFoaotfsJdACJkuTaIpGd7KbD6c/pOSV
      +P3jv8/FuYv0pnoxVIMbizd4wRwgtXApMtKuJ6KwTSsdLdVyY9D9ZFTp0kxSSh6BeR+EJMgu
      omWa0DIZvKlJRL6AkkigNzcTFgukXnmFD+YvkA2yUeRZ6JP38pzuOM3I8ghu4CKRj8YApJTY
      9ubi1J8X1uZ1eRh8P8oO3WQ10ZfuA+DG4g3a4m30paJ8O3dzd+lJ9ZAyUqiKui3V5gQOuqoz
      XZomrsdpjbXilwvEkpnViCs7B5Pno01o9+notdADzcQpF1HmFlETcYyuLvzZWfTu7mju2mJm
      +Uz04Mp3boeN3qCiXEZNJNb1Q0qJ9HxUy8R2bEqiRHu8veb/Ywc2qqIyW55lsGnwV+o3gLNw
      n1hzZ5TaXVEhPwH2cjTw525CdgRO/CYoCnaxgOF6ICV6RwfBUo4wuwi6jppIoHd2Rv0LQ2QY
      4oiAQAmI6/Eo2CmwSRgJnMBBVVTc0G2gGWANypUKyTq8QasFMh6Xk+DH4YQUPseT4MAD3axP
      drdtf0bZhjgJLuWzlN36NzueXeSjDz5gZiG3o2yj0qANhXN/FMUeNzAe6SZ4bmKUmWJIQnHw
      pUE8ZmKXcizm/v/23uw5suPM8vz53WPDvgO5b0ySykwmKYk7KUpUlVTd1W1V1jNT3VYP89jv
      /QfUU79NvY31WPeD2npsrKqtlpaqSqIkSiQlrsqFzH1PZAJI7EAg9rtfnwePCACZQCJAEiSD
      zM8sLQMBh4dfj+vX3Y+f75wqQ4OD3Ll9jXTPKCPDQxzcO7ZlfbXiMtUg4erFc3R3d9PbsfnT
      oJERtpE26K3CLfZ17FsncbKtmLukHNm/6VGYUjm79g77Hu9g7OgMkCQxd2+PM58vsLw4x8Sd
      caYmp0jl0ly/fAMn20EcBtyZmNy6sjhkci5P2pQMju2nJ7fx1FZanuOjM+fQDGPTGeAX47+g
      FHyGA6FLf78jB0ptFVKC06X2PW0cOzoDDIzs4XvdwzimINFMIt/FMC00XefEE8eouTUsyyRp
      ZRwKqFbKLJdcXnlqz6aQ5OzMNKaQlKoBWvzgDJDIhMH0IJPlSbodJWdeDspkzEzrp5l1ry36
      jm1d9usWsm7/6peg/zBU5qBr1+dX7xccOzoAdNOi01yzSbLXb5gsu3UuCsLg8JEjyBu3WCmU
      6MxuvPzp6uxk6vYsmZSFjODjhY+Zrk7z7PCzmLrJeHGck4MnubB4gTAO2ZXbxZsTb9KX6uOF
      0RfQawWIS0rWRCaArGcl2Up4KqhCbggWrhDFPVQXC0pkVkpkHKN3dCDjmGD8DonnYg4MYo6O
      kAjBTFLAMRzcUCFkpaBE2kwTJRE5K4cmNKIkwtIsDD8EWVM3hW6r/0NXQZtWRqE89XpkKIlc
      F2GaJJUKGAYkSbMtQteRQQBCKJtWy0LGMREgHIekUmkaTQvLUllgUURSrWIODytUyY9h6Sbc
      OwN7nwe/CoNPKhGr3LA6uNJMpB+SMIAMAuJyGTSN8N49zLExNMchXilgDA4QF4vKkXKoD4rL
      cPZ/wMm/VOcnYQ0QCgbVTOg9UD9VT0HoAY19h1D/klB9vplRv4sj0AwS1yWq1tCyGaTngyaU
      w6SuI8OQpFZrDxRoLRt0cXGZVLaDjk0GQCPCMMR1XapRFUM3uFG6ARr02r0M6oMsBAtYusVC
      bYGRzAgIMBOTlJsnHRVB04l8F80wMIIysW4jDBshNCrpMZyoRGL1U5ubRw8CDMfBq9WwhUD6
      AUFvL7ZlIoMQMTdL2NXF/LBJNaoiI4ljOTiaQ8WrYFkW1bhKEic4pkMs3TXBYAAAIABJREFU
      Y/ZGNl3eApqQTbtQKXRCYaElIYZIEJELmkHF7IcVCa5LZBgYQpDEMVoYqierpiOjCJFyIAgI
      Uyk0QPN9hKzzj5BITUdDgmEifY84k0EfHMTUilj+EonVQSW3n2zpFkImlDsOYZYmsKRHGMUY
      uk6ZLuzZFWIhkE5KIcGOg1GtIuKYwLKwazVIpfDimFSvIOXP4w19G3vurJIwFzqhFMRGFqHp
      mN4SmmFQ07vIRHnVF4BIEqQQgGzqmwo0QBIKk0q5E71cVo44UQS2gwjVg0DqulL5bocB0IiV
      ubv8+r1PGNuzjxe+feKhZXcUBnUL4HRS266I1lcAHoTPEQYNPWVp+hna8o2GQbcb5YrLvj1j
      dD3Es7YROwqDnv5vqzqc3+Q49f+opWIbR1sNgFTKYW5hCcfe2t4zfAgZbqo81Roha7MIquAW
      P/3ff12iNFNfr7dvtN0ACIKQam1zmkVQK3P95h0MY+MZIJEJf3P1b6gEq4zI+eo80XbYh7lh
      JX77TQ4pIdWrjALbONpnAMiIG7cmGerrIp3eXMz17vhNCiuLFGvBhjPAtfw1Xt39KlOVqeZ7
      b9x5g8lyC2cRjcgNQXl+W83/2kVQgb5DKsfg84hPkTvxeUT7DICgRr5YoBwIFhc2Tg4BsEyD
      UsXFttQMcGHxAqdmTzUFkmYqM5wcOKl09vPXKPgFRrIjXM9fV8uiWBnbkURqkyelgtWkVBCg
      u6IgyMjDH79FMDFB5d13qZ0+TTg/T7S0hH/7Nit/87fUzpwhWllZpwsKECYheS/PQm2BD2c+
      ZMldohpWCeJgNbGk8ZlrQyarPHkpN1x/x+UySbA5dXijkA206L54oJ7SDJz6rzD9saJa9z+m
      yGrxJrOnVOhM9dQpBYmuiXBujurp0/VGB/D2f1anyo3rlFJ9XmVB0bzjz3fPlfi+Qo7aAQWS
      UhIGPoVCkURKbCdNJr3xBlcmMVXXx7EtarUa87V5fOlzu3gbTdPoT/VzJHuEa8VrdKe6uZu/
      y9G+oxTCAjktR9fKPaxgBUsk+J6LadlIIYgDH9G9B606T9B9CKt8D8aeYfnMebKjY+jZDMUb
      N3AsC812iHq6MZaWkYsLhFGEGBjg0pBLTIzne6TMFCk9RbfRzXwwTxAHuKGLYznous6xpIOO
      4iS28EnMHLpfRNpZwkgJXAkgjkIM06Cs96HNRcgwwq1VMR0HUefBiyBAr/sSyFoNrbOT0HaQ
      MoFCAcO28f0Ax3HQdB1Q1kJRpUqsCZxvHcPUV7BrMyRJTGX0ZbJzHyHjiOrI8+heHmvpMnoS
      AIKKNYY2U6O2soJu20owd2AAY3kZAwiKRXTdwMhkCHJZUr0R6eJ1vL0/wLr7W4yOIZIoJIxj
      EmEiDQdRWcDO5KilRsgGC01YuMlDEkKZA9q5+lmaIBImpZUO9OU8Wl0IN6pVsbJZZBgRhAGa
      3ib5AA2TvEYUSyU6Ox6UQ78/vhSTvM+h7E7X/U0yyftaqEIIITB1jemZGeJEgm7R1/twJKih
      CrHdc4C1qmNfVtmdrhtoyqV/2W3ZqbobHmFblW+fPYAQ6MScv3CRmrd1AvYjOvSjaCXaaABo
      ZNMOfhQTPGSTl8QRK4XiQ88BHsXnFJ/zxvTLiPYZAFIyPTvPcH8fgwODmxabuHmZT85dwE/E
      ttb+j+JTxLv/l8oKa+NonwEQVqjKFCefOsHs9OaYfRTHpFOW4oBtkDc8V53jrcm31kmLbDuW
      bnxhsh1f2YhDxZItTHzZLflM0RYoEABxyMXLl4kT6OwdYt+uoQ2LhV6Vidll9owNU6vV+GT5
      E5aDZXrSPXixhxd5PJF5govli/Ske5BSci9/j/7Ofo51HaNzaYJsuIQUAhH5oFvEQQ10Gy3x
      kUYKv7KCpUPFOUZ0/Q56Ngs1F9IpknIZo7OTqFQm0TU021YS47kc13aFJDLBjVx0oStdfTSy
      VrZpQNEQuToWZen35lTeg2YCEhLl9YVmQBwgZAJmmhIdiJmgzvxUdqEyThCmokWDqGPryjE9
      tCx000L3PGRdWExYliqnCYjjej0SefAABkukazOQRJTz82T6xtCCMoXsQbILZ9B79qjkfikp
      il60OR8ZBCS1Gno2S1Qqo2XSaIZB4vkgJZpjEycJ5v4smWAJt1JQCI+ZgchH6qaie+sWQlPw
      bNkcIJcU6mcWcg0cGtfzCVQ5gFBYlAsdmKUi6HqdTh6Caarrq/dVWwyABh26srJAObbo68pi
      boHsNOjQmUwGXdebNxjQVDaQyKbrSaMbfN/H2Qw6E2L1wKhu6rapC41Ut3Kj7rVmePcn8zQP
      ypBoQltXvvllw6oX8bq2SDx/DdyXJOrmbbxufNaadsVJgkyUx0Hz/UbZ+xNThMD3PRzbWfO5
      Dfxda9ZZJyjj+R62aa22oVHN6lWsC99z63242r7Vz1d1IhMQGp7v4VjmmkO7NbU2+6bRl4Ig
      CLFsW70vpRoIdQn6xrW2BQzaEMcNyjB+4zb6oUPsHRti4tY1rt64ydGTL7JnqPuBv3McZ9v+
      AEKIHRFr3W692yovdpYOvb227OR1tl42SRI042tGh7adNJWVRZZWVD5uKtvBQH8fpvEFb3bH
      32l7GvDnEvfObEihaKdoqwHguTUiNHxPcUZWluaJhYVjrT7hkzgiv/JwGLQaVj+9DiioAfAl
      kbe+UnH5f0G0cwJoX0S00QCQlAON/SPd9PcrGDSOQuJknTYyEzcvc/7CBUL0TQ/CfnLpJxT8
      wqdvSm4Y8uOf/u+/DiElWFlFVmvjaJ8BENZYLvnsPnAUr7wMQN/AEJahs3ZLGcUxjmORrBkV
      a7n+05VpTgyc4Fr+WvO9uepc6/LeUqoBsIYGHOXzDygsyzAkLpWQSXsLRz0Q1UXF3vQKMHwM
      Vj4nGLQw9aUsp9oCBQJASq5fuUCp6jO67zAj/V0bFgu9KpNzy+weVTDoH+b/wEqwQtpOK4dA
      Yl7pf4X3594HHYQUCCkIZciJ3hN05yfJVCfByhAHHrqdBr9EiIGm6eiaRmD3YBbvUk0do3rj
      LlqcICwTKYRSro5i3GIBI4qws1kMy8IfGODMwAqGZhDIAAMDpCJ4ZTNZqmEVXaq9TMpOcTzK
      0O3OYooEaaYV/163SUIPzXRAMxBxgDRsCnEWcwlkGJH4HhgmJAlCV8iIMAxFedY0hGkSGqZi
      ii4toudyRPk8Rk8PaLpCg2RC4gdIt4b29NMYYpl0dQoZhxR9yAoX3TAo9jyFMXOadK4LLVEH
      YkVzDDFZRiKQrotwbEqzs2T7+jFSDonvq8/Qdfw4JnOkm0xtklqtRiqTQzgdTUQq8qpKVcKt
      4KRzlFOjdETLIDQkAqUOIRBSKqRI05qgUChMysUOzEpF2etKSVIsojU8hD1P+Qq3wwBowKCN
      WGuHuVncD4O2apS9pbjrQ2DQB4vWP1NKvDUwqPrzh7dlXd3Nr2gN9t18fz0MuiHEuhZaTBIF
      g6L4Us2vX8pVKPQ+CNNvtKUJpdZntcr8A9Lvnudi286G1yelXCcGrODeOsTagGBlYyatQ5Vr
      oE7Pq8Ogjb6oo6Sq+EYwaIS1lgzXgEGheY1tBYMmccSdu3dJZzsZHtyaDv1pYFDYIT+sbcKD
      26v7S4JBz/zf8NJ/UjPHmtg5GFT7ZsOg5aUZTp27zPTs1umIj8hwX0BUlx6hQF9k2JkcnY5O
      JvfZZFG8yPtsMOijUGFl1tkttWO0zwBIQi5eOI+T6yHtbD51z969zq9+8w5uEG1Km/7J5Z9Q
      CT/DFzd3qc6x+QZHFEDHiEKF2jjaZwBEPmbnMMceP0xv1+br/1KlQl93jjBmQzp0yS8xlB7i
      TvFO87256tz2ZFFuvAH5B03hvvYhk1U1DDcPvYeglv9y2/QZoy02wQBIydLCPFrs090/TDaz
      8eZmdHQXV+/OkzIFnhvz1p23WPAW2NW5i1jGLLqLvD78Ov8y8S/Ml+cxhMFcZQ7d0Hm2/1k6
      V6aJgiUFmXpljFQO4pAYtZmWcUTQdRjj6q8Iu59j5vw1DCeloMYoRHdS6CmHsFojqZTRs1mk
      aSL7+znbX0PTNOaKc2RTWcpeGVOYdGe6MTQDP/IxdAOB4HBoo9fmMUwTzVZLDakZRIGLMGy0
      JIQ4Qug6kTlIYaKE7jhI1wXTJA5DzFyOxPUQhhKDRWjIJCZOpRCahu/7yESSJDG6YSBBJZCX
      ymjZLFGxgHX8ODJaIplbQRbv4YUJTiqNiDzcgZOYt3+FHgXEoY+QCZ7oQboOUV2Y1nAc3JkZ
      nMEBNMvCnZ8nM7aLxK3hFYukT+whCfOEi7ewukcRmT4Sv0ycgKwuodkZDCdLEsfE9iBSVBHC
      ABkpIEhoiMhTxEY7V1fzcEnMLG7eJJifR+/qgiBAmBbCtpC+T1yrqZ/bBgZ1XcLQZ/reDKmO
      Lgb7etQvpSSWEv0+6C5JEoIgQNM0NF2jElbQhY6pm+hSJyZGIAiTEEuzaMDKke/imBroFkkc
      KrFYzUDGoYL2hE4sdDRNUwoNQqAJgdB1Et9H6DoiSUiE4p4K0yTxfQLfx8imCWWIgaHahVKD
      TkTSzE9oSrT7EY6pK+JiHEK9HYkwEEmgqNNCYeBumGBpdewfQNOUaGy4JmNL05osyLhOB9Yb
      rEhdV2XrUKQQQoGJQoBpEkU+ti7BsIiEhZ74CCSR5qDJCCFjhcsLDc+PcOIYqetgmqovNA2R
      JOq1YSA8T/WLlESxh2MZJGYGLSirujQLSf3mBrTIRRoOXhDi6CCSSCFPUsG5QtMV0hsHiiqu
      aSSJxAs0rLpSdpMqHobqbzUF97bFDKBpGulMhpW5Ra7cvM3w2F727a47ykQei+WQ/u718FgY
      hsRx3EyK72Br2BSgVrM+vVhrLrdxwVxuR0VjxZcljrtB6J/pOh8ObmznOpMkQf+6ieOuFMuM
      Dg/R1dmBXy1y9uxZzp6/tKGxwo4kxZ//2/V+tY1Dpm9ytHlecFsNgK6uLlaKZVKOhZXuYNdQ
      H7VqVUmltBgLtYV1G+BtRX58nSRi5YMPSIIA78YNgulVZ3Up5WqSS5IQTGzOl/lo9iMAin4b
      iu3GAbz319v+s8JPf0qyHRvdhlLcDkRbDQDLsvA8l1rNQwhBzQ8hcql5q0+hwuIMH5z6GC9Y
      fxB2eu40p2ZPcWnpEjdWbjTf/93U7/jprZ8SyzVktis/A6+kEI7CJFz6R/UF9ByA5ZvNYkZ/
      P6U33iCpVqmdOoV34wbVU6co/N3f4124AEA4M0Pp12+uuw6J5Hr+OmES8tvJ31IJKvyXc/9l
      PSFvZYJ1DozF+8hiH/+/sHxrw36S9bV/+be/bem8Q0pJXK2uey+uVJr1bBord1Ua4n1K29HK
      CnFBsW0bTjPB1BTuxUvq9wuLBBOTRMvLW7YNULTr+YutlX1IyDXiat7Va8TlMvpf/dVf/dVn
      rvkLisCrspQvke3opLcrR0dXL3v3H6Q7l26ugibGb5BISXf/CLapcWH5Arqmc7t4m0V3kYyR
      wY99Li9d5vrKdQ52HeRIzxE+mPmA/Z37iabOYjop5Vg+/hbMXlAisLOfwOjTUJpWuQC1PEn/
      Hip//w90//u/QDNNvAsXsXaNkX35Zfzr10lcj2BqEs22CYMAfaAXIQSloMQ/3vxHlmpLfG/3
      9/jn2//MC6MvcGruFH7sM5AaIPbKmHd/B3d+rzQyF68pvoudVT8LoSyLeg8RTn2M2bMLKSWV
      t9+m+tFHGENDuOfOQ5IoQ+56aqYQgiRJCKenqb75G4RpUvvgQ/zr13EeV86XMooo/q+fEq+s
      YO7eTRRFqwJTt36j9FGnzyoqdOeoIuplh0AIdQL/9tv4d+5g7d+Pd+ECld//XjFmPRdzbIyk
      VKb64Qck1RrarmEsd171t26pTWz+DkQ+XPw7lXTTvQfK84Rd+9cLXd2fHnqf0fdaYSwZxyz8
      9V+Tef553DNncM+dU7nQ7YACARCHfPLxGUpeRE//CEf3j3Lnzl2iRDKyax+dWbXeX7w3zsXx
      OV568TmSMMBNXD6c+5CXRl+iGlbpS/VxLX+NfZ37sHUbTWgIIZgoTWDrNh3lKunB/asdP30W
      Dv/xaufefkt1drqXmj1AcukW2VdebpLORB2NklLiXbhA+Te/pfPf/CmeafKxGCeSEQLBi6Mv
      cnn5MicHTjJTnWEkM8JEaQJDM7i+cp0TXSfopW5Ene5VT9mLfw+1JejaC0d+pKgI139Bdfh5
      kisTxCsFUidOoPf2UP7Vr+n8t/+WYHycYGoShEYwcZf0yZME1Sp6by/Zo0fxr1/HHBujdvYs
      eq4D78pl9J5esi+9SDA1hdE/QFi9Q7p8B6x0fRa8BbufhYWrsOcFmPpDfTbQKKcOoVc07Mce
      o/L220TLy/T8h/8Auk75l78krlTp/JMfs/yTn9D3H/8j7sV/Iu0vKKFdoYFXhI5RmL8Eo89A
      pk/9O/+31Ha9QhpPmfL5Zbj1W7UM2/MC3Py1ejgc+iHEIcnMOVaWOsgODaLlctROn0bPZImr
      VYzuLlInT1L6xS/aYwA02aBS4nkuQjexrdZMMrarDbolG3Q7ZaUkmJ7GGhvbVr0PrTsOlErE
      mqed53nYug6GsSnLVEaRohZPT0N3N5rjrCMJxuUy4eQk9uOPP1BHSwzZoApWBq+0hN3Rtyo8
      4LpodeQmqdaQSPRMBhnFCEPHq1VxHFstpR7GkA1qePlpnKgAlUVwOqB7nxqUKxPQe1ANoOkz
      YNjIwWP4kUTMzhKXStiHDqGl04TT05ijowhNI5icbI8B0IjC3F0+vj7DgYMH2DNaF8dKIqp+
      TCb1oJKD7/vbZoPulGfVV8U7C3YWBv2qXGerHmFtcQ7QCN0wuDdxGz+KGRrowzbVBiyMHkxQ
      b7BBr5Sv4CbrEYeiX+TF0Rd5f+Z9OqzV84Hj/cdJzd6EsLXNWRgNU55vzSg6yOX4eDRo+hQ8
      LIQQHIuzpL3W0g2l3kNlJli3yXtYJKkUEvBbQGKcJ54A9x74rRmCJHo/5alKS6iNME3EsA7x
      FumpuqmWNn4FJt9uqR0YDu5Slqj6cM5Xe80A8xNcHJ8nLC0xfOQkR/duLI7ViM1mgE8WPmHJ
      XeKZwWeaZtmNeDQDfLFtaan81X+Go//6Gz4DJCGFakDkVRg7/C3Gem3OnDlNHMfsO/wkA91Z
      AEr5BSbmVjh8cD+e5zX3AEEQoOs6uq7TLbp5Z/Ednu17lpWVFUzTVOptvk8cxyqZQtPU2tq2
      EfXsr41eLy8vNzt5rX79/a/XusR4nkcqlXpAMKvxurHn8X0fu27uEIbhA6/jOCaO46bef+Nn
      y7LWvY6iqCmHHkWKJdt4HdahTtM0CUNF9zAMY93rIAiaWXhr+3Hta9/3lRmGr6Bc3/fX9Wvj
      ted5WJbVfJ0kSROdWtuva/vPy6/g1GrUarVN+/n+fm1A4I0zmbV9u7Yv22cASEm+VENLIlzX
      I53bRdoQXLp5k46h/c0BkOnoIbp9m1AeXJcRtvbJsSe1BzkhyWVysMZuLJ1Or3vKrP2bjV7X
      ajV6e3sfWmajejOZ1Q/d7HUjC66V2OkZAGi5T3RdJ51Ob1mu8bql/u4bgKQClvnQutf2XyqV
      WjcDrP3d2mifASDALS7RN7qvrgEJew8dIZXrpLeeIL+8MMPM9D2WqoLHiPE8b8MLF0Lwl4//
      5Rfa/EfxGWLPczB3EVIj0PGgAuBnibbYAzSmMJkkSs1TE2wGmEVhQBBGpFIpoij6cmHQT1l2
      p+verkVSO17n18oiCdQa1S0u8pvf/4Gjx5/m4O66GkESUvZicnXTPNM0SaG+5CiKmqoQrca6
      U88dKPuru78iY2ZwI5eUkeLF0Re3X3dhUrk07nl+2+2AVcHenbzOVqOl8tNnoTxL5AxhrlyF
      p7aevaVUZn9b1d0WA0AIZXYRRwG9g8MU8suIvaNoQpH4de3B7K/Gz9WoquRjWoislUWLXHS/
      RZGsQG7Nl6mHjCKmkzx96T5mq7MMpAcoBSWKYZH75zOBwIijzdsxfUrBjHV1OxEmUN/ottSW
      xoa8BZkYLZNBi7yW+0SEiYJjW4FBNQ2R+OjafXVb9cSWRsJ94S5869+huS56UoIkBLM+E4Qe
      IMFMgV9S7FQzRaI74LrILSxj22IANMLJdOCVr2J19TI/N8fiwjzFQoH9TzxNLrN+amycA9zz
      7hHQmovJwa6DmOVZteFqIZKgi6DYGqsxcmzyAxFPDz5NOSiTMTPUohq3Cg8S2gSCfZEFUWnj
      ykZOgplW/BkAMvh5uap5s0XE9VP0JNh68Fr79oI7D3FrbFVJB8FS0NoAMHToBqit/0V5Tt38
      3fvUz3ueXz0lHnwCFi4rXhbA1Z+pm/7Ev4fz/1P9Pn8Hjv8F4ewswv8aDQCvWiKV6wbdZHBo
      iOLiHN1dWaquD6hklCQOWVop0d2pDriO9h7d3klw70FoEVExajXSh1pEX2o1TtTr7XLUpr1T
      7+Tpwac3KV7buh2do0A9UWTPzqFAQS3Vcp9o22zLhtd59Z/V4Vd9ibcucsNqSTT6tBpkZhq6
      +tXDoP+I+puaOsi0Dx78eiXE2KkMM3dvMHXvHoWyS19fD3OLRbo6Vjvwzo3LXL167aHiuI/i
      Kx5+SREAN4uGgIGMVXrj2Lfh7H9XT38Ap0uR6lqI9pkB4oC33vk9Vtcw/+aPX0MIweSih+dW
      8P3VqVxtfHTCMCIMN4ZBH8VXPAa/BT37Nv6dEOpGv/IzNRBGn1aDYP+rkKrniQ89CbffgQN/
      vOVHtQUM2ogkiZmbniQQKfaODYGUJFKuM8OLApd7c3n27BolCB6R4TaKtqNCfIqyXysqxFpx
      3K7eQeI4bh6LbxQDfd2USsV14ritxnbkFHeq7E7X3TgHiFokz22rLe7m38u26i5MQlhTG2HD
      Xi1bmYepU83D0PVR3xPsewm5eIPiZJVisYjR20fqxPEm/Ft9/32FDsk2GQD30wIWFhcZ6O/f
      8u8+d3FcKVVqYueuJiqxI0K6rZSvzEOmH9wVpGHgCIG2xdOuEaHvU/nwQ5z9+7F27/7sbWnE
      7HmS5SWieyHZ115D22KGkUmCrCySnrsI+15aVb6uLMLyZeg9ALd/vrq2T0zSpXF46s/Xq2Sv
      jcoi3P4Fye7n0Qb7cByHcGYG9623SFwX58gRcqOj2IcOIQyjPQZAI25dOUe+GtPR3dvSANgq
      Gs6R6xJAZKJgtXtnVPZV/xGlgFaehbvvQXYAxn8HI09BbuN1arS4hN7VSeHv/g4tmyXzwgtQ
      vznDOOTc4jme7HuSlNHCDVueUze7EDB0TL23dEslfoQeZHrB7KM65aHZDvbRx9A7O5uZafeH
      d+0a3twcmeeew/31m5i7dq27fhmGVN59DxkERAsLdPzoj8E2QKY2TliRicoGmzkH3XvQ9j1L
      eh+Ufv5zcq+/rixk74vg3j3Ce/cIZ+cwv30IunbDpX+AJ/9cbV5v/RqO/4W6yXv2qWQbgMSE
      0ScenjiTG4Tj/4fSAvJ9hKZhjY3V/RJ0/Nu3ybz0UvOa22oPcPp3v2SuprNn7z6OHT340LJR
      FDXXjIZhECURH81+xFx1jk6rE13TqYU1EGogaELju0PfJTN7m3S4rDZXdhbyd1U+rtMBB3+g
      vpQ4gMXrFJdDtJk8em8PRk8PcaVKOD2N0ATBvWm6//f/DeE4FH/2T5ivfQ/SBm9OvMmLoy/y
      7r13Od5/nMnyJJWgghACR3ewDZucmeOgvYvM7EeAhOHjCtvW637BC1fh6f9TXagQylwilSJe
      Wsa7cYN4JQ+JxOjvI5ydU0YZgLBsZBiQ/tGPFANzcZHqqVPonZ0gBEZfH/6t2+Re+x56Zycy
      jkkqFfziHdLFmyoNcfez6oGgGbBwRS1Hhp5UZxOa3uxzGYaU3ngDdB3p+wjbJimX0Ts7MYaG
      sQ8fQrNt3CBQs0t1CW78EuwOOPCa6vv7Yif2AG00ACSLs/e4evMOo3sPcmD3yIalpsevcuHW
      LN977VWIAoQusAyLn9/5Oc+PPE+33d3044X6kblMVKqepuPW3JY7uVqpkE6liZYWCWdn0TMZ
      rIMHH0gpTGo1Ft96iz8cTfjxvh8rGcTY51r+Go/3PI6hqVTGRCaEcchsdZZcYZne4cfUmraR
      9H3vDHTvVmiHvnrEf/+NIaVE+j7B1BT2wfqDIo6VApyURHHc3ARLqQ7QZBgSLS2hd3Wh3yfw
      1axfSpWrW5xST+pMPxz4/ron8tq2yCQhLhYxurpACGUjpWnr+mdd22Xd1HuTJ/w3ewDEIR/9
      4Q8sFiq88sordGyiDXr90lkqARx+/ASWiDi9cJoFb4EXRl5gMDO45cfsFCpRLZexMykMrbVV
      51ceBVqryPAZ2vIIBWo1dJNnn3+RKPQpVlzYZACMje3h2sQ8GVsjDODZ4WfRdb0le6SdDKHr
      Ld/8bRFfcn9+XtEW38j9HmGWoW8KgworzdFD++piup9OFeLLLrvTde8oDPoVuc4GHXqrBU5b
      DID7YdByubzlVNigQ6dSqa+GR9g2y+5k3Z8lI+zzLrtTdTfSWr8+SyAgDn1u3x5H2Blymykx
      10PX9W19wY/imxltRYYr5+e4fOM2i8tbS5FEUdRM0H4UX72QUiLraBRBtXXxWykhbi3foJVo
      HxQo8pjLlzFMi85cFtNQ63qZhFy5eJ5C2aOwUmBoZIT55QLff+17EAc7ygWqVqs4SYKWTuNf
      v0FSrSDjmDifR6TTSD8AmaClUvjZLFcGa+rwrQ55xjImiANsXR31h0mIoRlUggqvdhynM39Z
      MR5F3QA6qKibJdOvkkJ0CyKfqjNKfKeMDCOk56mDMMcmqVQQ9ZRAzXGI8nn0TJYknSYJQ3TX
      RaQckkoFa/9+wokJ4kIRvbsLYTvYBw9AIgn9adLeLFhZhf+XZ+pyjVK1JayBWwCZUDEGkVNl
      BXlGEYnno+eyyKQhJS+b5wJaJoPoj8hoAUQehG7drzgGp1O9J+uYnT+4AAALSUlEQVTexYZD
      zRki7c2p/giqqEOcCJDq/CCoKGLcwddJlm5SlYNoc3PExRLEEdbu3eoEeE2WWPsMAL/Ez998
      h0A4PHX8OHvHBolDj4npBaS7Qi2ICCPJ3FKRwf4u9h9+Ei32OLd4juHcMAP2ALGIObd0jqd6
      nuJi/iKWYRGHMaWoREzM452P07k8gSNCNN3AW5rETmUxDA0hNExNIjVlk6QZJqV4lPLdGRxN
      wzx4EF/XSWWzaI6DW5fogLosCpDOZYmSSHGU0hmQEPgBlmMhpCAIAhzHwQs9gpU57HQ3draz
      JVmUdDq9KoVimvjLy0jDwDJMYgFJGGKlUoRhSBiGmKkUpmEQFAqITAY5NYUYHUWYJqau405M
      EC8tkX3mGYIoQhNgyJCgVkZPdaDrGoHnogdFdCeLLxwMw8QPVFuaUih1yZSHyaKkUqmNZVHq
      5twN6ZPGw+mhsiiWgT7xeyq5g4SlmHRnB1pXF36thlEq4d+6jZ4kaIkSTWifASAlQT39UNN0
      jPoMkEQep05/wu69e5m9N83efbuZmF7ixLGjhEFAIhLulO8wUZrAj32G0kPM1+Z5buQ5krqs
      d6fdiamZaELDq1ZIa3V6tZFS4rSb6Fa2I0sSHrFBAagvwdpiADQ8woIwII4TdMPAakxjMiFK
      wNAf3M5sBIM2Lnezc4FHqhBfbFseqUK0EJqmkXZMTr3/NtXEpqu3nxe+fUL9MvJYKAUM5B7k
      jnwacVx4BIN+1vqNhQXMsTGEvoXi83brDqqkly4oPtIW8fWDQXWL5198ifc/PM3gwCB+tcDd
      6QUqpRJ7Dh1FBhXeP3OJvWOD3J1e4tnvPvNlt/hThZSSqfIUfaIDIkMtwUCZRYx9R3kWgJJF
      mb1Qz5B6Zl1erYwixJpB79+9S3B7HGRC9rXXHvzMOKb86zeVu2Klggx8nG99C//aNcVkDWYh
      XFGbVE1TTMvhY4rFeV8ktRrejZvUPjmHjEKMvn6Sconsq68Sl8sEt24h0mnSzzyzfhaOQ1i6
      oZilbgHsHBz9VzDzCZRm1XXm9qlN97n/TylHRK5ixJ74CwUIrLsotbyVYUg4M0MwMUn25ZfW
      9XM4MdFGAwColQss12I6C0tYY0eYHL9FJpvDDyI86eK7Ljdu36WzI0e5FqDFnzElUkq4+k9K
      mdhsjWu/3Uhkwu3CbQ51HwKgElZ4b/o9/ijzOOnxq4oWXJhUqMvsOUVGkwkYDhz6AcQhcvo6
      YS0knJ9XSgiaBkKj449+SOL7+Feukv3+a0RLSxT+9n+i7dlD7NZw+vpIHTtG9aOPSB0/hjky
      Ur9sZe6ReflljN5ewloaohWFzFgZNQBuvakS0fc8r24+mUASIfJXyL3+g2bySTA+jjkygvvx
      JwjLJP2d7xDOzFB97z0yL76o+vjuu8ptpvegSm0MKsoh5vzfwMDj8NifqAFQqylaec/+1Zkl
      dOHyzxT6YzpqIMUh6DZuqZ+oXAHTQM9m8a5exTl6tMlUNXftao89AABJzOTEOOcvXOLw8e9y
      ZO8It69f4tqNmxx9+hXGuk0uXbqMYWfIl6q88Px3ScLNYdBqWKUaVhlID6x7f91G687vlVvJ
      9Fn41r9rifglpdIK0iwLmSR1b2GximBELj8f/zmv73mdtJHm/OJ55mvzHOk5wsGug5yaPcWR
      niOYsUn67m/UkxDUjQHqy9U0BUc2rqVaRZ49i7lrF9aePcoE+85d/GtXSapVcj/8IXpHh9r/
      JIk6JS+XiS5dIilXsA/sxz56dNN90aZkuKACkx8p2BIJXoHa3h+S7nxIQns9vOs3iOZmEaMG
      mb5d65KMNouHboKlVJCo0EDTH9gESynxzp8nCQLifJ7MSy+hZzLtNAMkzM8vkM11IhM1veU6
      ehgbGcG2DKxUjpPfXr823OwYzI99fjf1O5a8JbrtbtJmmlpY47mR50iHAGn1pVaXYO9LKiGl
      ugDZQfX+1X9SNGAMgrt3qZ05i0inkEGADEOEpmMODxEtLqKl0ySeh/n97xPEAb8Y/wV/sv9P
      eOPOG/Q4PXQ73fx434/5YOYD5qvzrHgrfGf4O4rr1DmmPvvIj1Ybbzy4bhdCkHn55XXv2fv2
      Yu3ds862STRMsZMEvaOD1Kuvfqpvol6ZGpyHXl///kNSVdeGc+Qw8eAAnmHABkkzn6o9+uYq
      cEIInOPHqb77LvbBQ+j1lUH7DACZsLAwT7Hi0zu6HxmHXLx0kXQm+4BL/Nq4nr/O0f6jCASR
      jLi1cosr+St8e/Db9KX6cAwHTWhNdMidfAem8uqJcugHqmPHnoGbb8KRHytfqrHvwO23CMIR
      krJP55//mVoWiFUuu/vxx3T86Z8qfPvKFaqXL/NR7wJ/tPePSBkp/uzQn61r5wujLzBRmmgu
      hQCVdfYZQojNufVfhdC7uhAtDpjPI4QQZO97ULTFEqgBgzYSOVpBMMIwxHVdinGRWxWlvqYL
      ndHUKJ1aJ7ZhN3Xt1+rYg8Q0DHUQtuZgRtw7TUpWoWOMvD2Gbdvomka1no0FD/cH0ItFip06
      fU7flv4AURwRhRFCiI39AQIP29CIhUlc75O1B2Nb+QOEYYhpmk0fAHi4P8Ba2HQrf4AoirBt
      u2V/ACEElmU91B+g8brhl9CqP0CDD/Ywf4C2GAD3R7lc3pIMF0UR1WqVTCbz+VMhIg/QKN69
      g7G0AkIjWlzEPnIY9+OPEYaB3tFJEvgI00L6PmF/H+eGK8QypuSX6LA7iJMY27DxI1/dCJoF
      Qg3UY4FNjzcPyFVH+iRQG04zpfYAoaIHV81+kns+MvCRnge6AVGEsC1kqP5PXBfpuqS/+ywy
      l8W9dAnd9RCmAUKgdXRgjY7iXrmi1BK6u0k9dQJhGKpPwjykupVold2h2iE0hdqs2ZS2zUFY
      PdpqACRRwLXrN+no6WNs+OHZXY1RbxhGSwMgkQmJTAiWZ0ivXFM3kVdUaIThKJQBaKbsRR7V
      4RcVj6e+pvauX8c5cmQdBNmIZq7sFgdx68qnnNXP26rsfSmRxDHCMB7gw3tXrhBJiX34sFJO
      rm+M/fFxkmoV57HHEKZJXCjgnj+P8/gThJVbpPVIwZOpLvV/ZU4Ngp79Cr5M9UISUknvR06W
      lVG2piEsG6IQmSSYg4P4t8cx+nqbjpbanhSZ2j3UqKv3cy1fV30z1efV+73mDJGWFaX8cPRf
      qT1aflz9zfCJunyKBN36eg6A4sIk//LOGY4cOcIzx5/Ysvz9B2Fu6BITcz1/HSklezr2cH7x
      PLGMMTWTk4MnsfILpHuG1Y2f6q7Lb8gNZTjakSIAn4IKUa2Svh9Ori2rAWDXlZzrdJF1OcF1
      a1ahaYokWCyiZbMklQpGT89q2/GU6EAD2WrkBieR2tjWSXS1ao10UlJw7I1fKuSo95B6QNx9
      t06SqwCCJN1LYTFN93e/S+Ef/kFJxtSJi+boKEmtht7R0UYDIPL56PRZ4kQysvsA+3atN8gL
      3DKXr91i19gY0wt5jh7ej1urcaF0AT/xKbgFkiihJ9PDgdQBPOmx4C3wROcTOJazziPMcZyW
      PcIetu6/3yOsMQO06hGm63rLHmHryHAteoQ11v2wtUeYpmkte4StI8O14BG2KRnuvr5shQyX
      rU4Qde4lnjpDqI3hvfcemVdfJentxTZMosIK1akp0n19+HfutNEAkJLpqTtcvnSZwQPf4viR
      vff9WjIzfpmL4wv093Rw+MmTWITNGWBbS49H0ohfWFt2eg/gOM7m5uFStlFCTBxw9swZEitL
      V259J9TKK9y8dokPL9xh10Anc0tFTP0+0wkhtrz5H8XXLx72nQsh2mMGuD8pfsOQkrhOgFL7
      uhjXVRo/jzzC1kcDOn3EBoX/H7zd0EIzLvcbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
